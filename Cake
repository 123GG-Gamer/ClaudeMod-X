var _0x57dc = [
    'return\x20(function()\x20',
    'console',
    'log',
    'warn',
    'info',
    'error',
    'table',
    'length',
    'constructor',
    'prototype',
    '__proto__',
    'bind',
    'toString',
    'src',
    'https://i.imgur.com/OZL1PXR.png',
    'style',
    'position:\x20absolute;\x20top:\x2015px;\x20left:\x2015px;\x20z-index:\x20100000;\x20width:\x2050px;\x20height:\x2050px;\x20cursor:\x20pointer;',
    'body',
    'prepend',
    'addEventListener',
    'click',
    'display',
    'block',
    'none',
    'createElement',
    'img',
    'position:\x20absolute;\x20top:\x2015px;\x20right:\x2015px;\x20z-index:\x20100000;\x20width:\x20100px;\x20height:\x20100px;\x20cursor:\x20pointer;',
    '#youtuberOf',
    'css',
    'querySelector',
    'location',
    'native_resolution',
    '#enterGame',
    'fillStyle',
    '#8ecc51',
    'hsl(180,\x20100%,\x2050%)',
    'call',
    'roundRect',
    'getElementById',
    'moomooio728x90_home',
    'div',
    'className',
    'menuCard',
    'mainSettings',
    '\x0a<div\x20id=\x22simpleModal\x22\x20class=\x22modal\x22>\x0a\x20\x20\x20\x20<div\x20class=\x22modal-content\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22modal-header\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22closeBtn\x22>&times;</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h2\x20style=\x22font-size:\x2017px;\x22>Claude\x20Mod</h2>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22modal-body\x22\x20style=\x22font-size:\x2017px;\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22flexControl\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<br><h3\x20class=\x22menuPrompt\x22>Tank\x20Gear:\x20</h3>\x20<input\x20value=\x22',
    'fromCharCode',
    '\x22\x20id=\x22bullHelm\x22\x20class=\x22keyPressLow\x22\x20onkeyup=\x22this.value\x20=\x20this.value.toUpperCase();\x22\x20maxlength=\x221\x22\x20type=\x22text\x22/><br>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<br><h3\x20class=\x22menuPrompt\x22>Soldier\x20Helmet:\x20</h3>\x20<input\x20value=\x22',
    '\x22\x20id=\x22spikeg\x22\x20class=\x22keyPressLow\x22\x20maxlength=\x221\x22\x20onkeyup=\x22this.value\x20=\x20this.value.toUpperCase();\x22\x20type=\x22text\x22/><br>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<br><h3\x20class=\x22menuPrompt\x22>Emp\x20Helmet:\x20</h3>\x20<input\x20value=\x22',
    '\x22\x20id=\x22emp\x22\x20class=\x22keyPressLow\x22\x20onkeyup=\x22this.value\x20=\x20this.value.toUpperCase();\x22\x20maxlength=\x221\x22\x20type=\x22text\x22/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3\x20class=\x22menuPrompt\x22>Samurai\x20Armor:</h3>\x20<input\x20value=\x22',
    'appendChild',
    '#tankGear',
    'input',
    'toUpperCase',
    'charCodeAt',
    '#bullHelm',
    'val',
    '#soldier',
    '#emp',
    '#samu',
    '#pit',
    '#pike',
    '#booster',
    'type',
    'text/css',
    'createTextNode',
    '\x0a.keyPressLow\x20{\x0a\x20\x20\x20\x20margin-left:\x2010px;\x0a\x20\x20\x20\x20font-size:\x2016px;\x0a\x20\x20\x20\x20margin-right:\x208px;\x0a\x20\x20\x20\x20height:\x2050px;\x0a\x20\x20\x20\x20width:\x2070px;\x0a\x20\x20\x20\x20background-color:\x20#fcfcfc;\x0a\x20\x20\x20\x20border-radius:\x200px;\x0a\x20\x20\x20\x20border:\x20none;\x0a\x20\x20\x20\x20text-align:\x20center;\x0a\x20\x20\x20\x20color:\x20#4A4A4A;\x0a\x20\x20\x20\x20border:\x200.5px\x20solid\x20#f2f2f2;\x0a}\x0a.menuPrompt\x20{\x0a\x20\x20\x20\x20font-size:\x2020px;\x0a\x20\x20\x20\x20font-family:\x20\x27Hammersmith\x20One\x27;\x0a\x20\x20\x20\x20color:\x20#4A4A4A;\x0a\x20\x20\x20\x20flex:\x200.2;\x0a\x20\x20\x20\x20text-align:\x20center;\x0a\x20\x20\x20\x20margin-top:\x2025px;\x0a\x20\x20\x20\x20display:\x20inline-block;\x0a}\x0a\x0a.modal\x20{\x0a\x20\x20\x20\x20display:\x20none;\x0a\x20\x20\x20\x20position:\x20fixed;\x0a\x20\x20\x20\x20z-index:\x201;\x0a\x20\x20\x20\x20left:\x200;\x0a\x20\x20\x20\x20top:\x200;\x0a\x20\x20\x20\x20overflow:\x20auto;\x0a\x20\x20\x20\x20height:\x20100%;\x0a\x20\x20\x20\x20width:\x20100%;\x0a}\x0a\x0a.modal-content\x20{\x0a\x20\x20\x20\x20margin:\x2010%\x20auto;\x0a\x20\x20\x20\x20width:\x2040%;\x0a\x20\x20\x20\x20box-shadow:\x200\x205px\x208px\x200\x20rgba(0,\x200,\x200,\x200.2),\x200\x207px\x2020px\x200\x20rgba(0,\x200,\x200,\x200.17);\x0a\x20\x20\x20\x20font-size:\x2014px;\x0a\x20\x20\x20\x20line-height:\x201.6;\x0a}\x0a\x0a.modal-header\x20h2,\x0a.modal-footer\x20h3\x20{\x0a\x20\x20margin:\x200;\x0a}\x0a\x0a.modal-header\x20{\x0a\x20\x20\x20\x20background:\x20#cf2727;\x0a\x20\x20\x20\x20padding:\x2015px;\x0a\x20\x20\x20\x20color:\x20#fff;\x0a\x20\x20\x20\x20border-top-left-radius:\x205px;\x0a\x20\x20\x20\x20border-top-right-radius:\x205px;\x0a}\x0a\x0a.modal-body\x20{\x0a\x20\x20\x20\x20padding:\x2010px\x2020px;\x0a\x20\x20\x20\x20background:\x20#fff;\x0a}\x0a\x0a.modal-footer\x20{\x0a\x20\x20\x20\x20background:\x20#cffff;\x0a\x20\x20\x20\x20padding:\x2010px;\x0a\x20\x20\x20\x20color:\x20#fff;\x0a\x20\x20\x20\x20text-align:\x20center;\x0a\x20\x20\x20\x20border-bottom-left-radius:\x205px;\x0a\x20\x20\x20\x20border-bottom-right-radius:\x205px;\x0a}\x0a\x0a.closeBtn\x20{\x0a\x20\x20\x20\x20color:\x20#ccc;\x0a\x20\x20\x20\x20float:\x20right;\x0a\x20\x20\x20\x20font-size:\x2030px;\x0a\x20\x20\x20\x20color:\x20#fff;\x0a}\x0a\x0a.closeBtn:hover,\x0a.closeBtn:focus\x20{\x0a\x20\x20\x20\x20color:\x20#000;\x0a\x20\x20\x20\x20text-decoration:\x20none;\x0a\x20\x20\x20\x20cursor:\x20pointer;\x0a}\x0a\x0a/*\x20Customize\x20the\x20label\x20(the\x20container)\x20*/\x0a.container\x20{\x0a\x20\x20display:\x20block;\x0a\x20\x20position:\x20relative;\x0a\x20\x20padding-left:\x2035px;\x0a\x20\x20margin-bottom:\x2012px;\x0a\x20\x20cursor:\x20pointer;\x0a\x20\x20font-size:\x2016px;\x0a\x20\x20-webkit-user-select:\x20none;\x0a\x20\x20-moz-user-select:\x20none;\x0a\x20\x20-ms-user-select:\x20none;\x0a\x20\x20user-select:\x20none;\x0a}\x0a\x0a/*\x20Hide\x20the\x20browser\x27s\x20default\x20checkbox\x20*/\x0a.container\x20input\x20{\x0a\x20\x20position:\x20absolute;\x0a\x20\x20opacity:\x200;\x0a\x20\x20cursor:\x20pointer;\x0a\x20\x20height:\x200;\x0a\x20\x20width:\x200;\x0a}\x0a\x0a/*\x20Create\x20a\x20custom\x20checkbox\x20*/\x0a.checkmark\x20{\x0a\x20\x20position:\x20absolute;\x0a\x20\x20top:\x200;\x0a\x20\x20left:\x200;\x0a\x20\x20height:\x2025px;\x0a\x20\x20width:\x2025px;\x0a\x20\x20background-color:\x20#eee;\x0a}\x0a\x0a/*\x20On\x20mouse-over,\x20add\x20a\x20grey\x20background\x20color\x20*/\x0a.container:hover\x20input\x20~\x20.checkmark\x20{\x0a\x20\x20background-color:\x20#00cc0c;\x0a}\x0a\x0a/*\x20When\x20the\x20checkbox\x20is\x20checked,\x20add\x20a\x20red\x20background\x20*/\x0a.container\x20input:checked\x20~\x20.checkmark\x20{\x0a\x20\x20background-color:\x20#cf2727;\x0a}\x0a\x0a/*\x20Create\x20the\x20checkmark/indicator\x20(hidden\x20when\x20not\x20checked)\x20*/\x0a.checkmark:after\x20{\x0a\x20\x20content:\x20\x22\x22;\x0a\x20\x20position:\x20absolute;\x0a\x20\x20display:\x20none;\x0a}\x0a\x0a/*\x20Show\x20the\x20checkmark\x20when\x20checked\x20*/\x0a.container\x20input:checked\x20~\x20.checkmark:after\x20{\x0a\x20\x20display:\x20block;\x0a}\x0a\x0a/*\x20Style\x20the\x20checkmark/indicator\x20*/\x0a.container\x20.checkmark:after\x20{\x0a\x20\x20left:\x209px;\x0a\x20\x20top:\x205px;\x0a\x20\x20width:\x205px;\x0a\x20\x20height:\x2010px;\x0a\x20\x20border:\x20solid\x20white;\x0a\x20\x20border-width:\x200\x203px\x203px\x200;\x0a\x20\x20-webkit-transform:\x20rotate(45deg);\x0a\x20\x20-ms-transform:\x20rotate(45deg);\x0a\x20\x20transform:\x20rotate(45deg);\x0a}\x0a\x0a',
    'head',
    '#adCard',
    '#pre-content-container',
    'keyCode',
    'activeElement',
    'toLowerCase',
    'chatbox',
    'TankGear:ON',
    '13c',
    'BullHelmet:ON',
    'SamuraiArmor:ON',
    'TurretGear:ON',
    'simpleModal',
    'getElementsByClassName',
    'closeBtn',
    'InvisibleWeapon\x20By\x20[GG]GAMER',
    '#dd',
    'change',
    'checked',
    'Detector-ON',
    'Detector-OFF',
    '#ab',
    'onbeforeunload',
    'keydown',
    'BoostFrozenMillClaude:\x20Off',
    'BoostFrozenMillClaude:\x20On',
    'atan2',
    'preventDefault',
    'dir',
    'round',
    'random',
    'oldSend',
    'Tried.\x20-\x20Hat',
    'Tried.\x20-\x20Acc',
    'floor',
    'gameCanvas',
    'mousemove',
    'href',
    'sessionStorage',
    'force',
    'searchParams',
    'msgpack',
    'buffer',
    'send',
    'data',
    'clientWidth',
    'clientHeight',
    'resize',
    'clientX',
    'clientY',
    'split',
    'clan',
    'InstaSpeed\x20Set\x20To\x20[',
    'hat',
    'acc',
    'Hat\x20Buyed\x20acc(',
    'foodtype',
    'Cookie\x20or\x20Cheese',
    'Cheese',
    'ai1',
    'ai0',
    'Polearm+Bow\x20OP!',
    'Polearm+Musket\x20OP!',
    'mill',
    'Katana+hammer\x201N$T4\x20Blocker',
    'stick+hammer',
    'Great\x20axe\x20Bow',
    'khp',
    'Katana+hammer+Spawndpad',
    'mill+pike',
    'katana',
    'Katana\x20Slected',
    'axe',
    'Axe\x20Slected',
    'U\x20Have\x20',
    'cps',
    'Changed\x20CPS\x20To\x20[',
    'Cps',
    'leave',
    'Left\x20Clan',
    'crash',
    'object',
    'weapon',
    'isLeader',
    'accessory',
    'push',
    'slice',
    'orientation',
    'owner',
    'indexOf',
    'pow',
    'BullHat\x20Detected',
    'sqrt',
    'Detected\x20Timing:\x20AntiBull^_^',
    'Polearm\x20Detected!!',
    'Musket\x20Detected!!',
    'Tool\x20Hammer\x20Detected!!',
    'Shield\x20Detected!!',
    'AntiInsta\x20Healed:[\x20',
    '\x20]Times',
    'Bull\x20Bleeded:Succesfully',
    'FrozenCompactMills\x20Claude:\x20Off',
    'Frozen\x20CompactMills\x20Claude:\x20On',
    'from',
    'encode',
    'claered',
    'start',
    'DedSv',
    '!crash',
    'XT\x20Insta:\x201.0',
    'XT\x20Insta:\x203.0',
    'XT\x20Insta:\x20Reloaded\x201.0',
    'AutoInsta-On',
    'AutoInsta-Off',
    'AntiBull-On',
    'AntiBull-Off',
    'AntiInsta-On',
    'AutoHat:ON',
    'AutoHat:OFF',
    'AutoHeal:ON',
    'AutoHeal:OFF',
    'Wtf\x20Crash:>',
    'AutoInsta!!',
    'AutoReload.',
    'AutoReload..',
    'AutoReload...',
    'AutoReloaded',
    'keyup',
    'stop',
    'offsetParent',
    'gameName',
    'innerHTML',
    'ClaudeMod',
    'enterGame',
    'blur',
    'setupCard',
    'box-shadow:\x20#3DFFBF\x201px\x201px\x2040px;',
    'guideCard',
    'text-shadow:\x20#3DFFBF\x201px\x201px\x2040px;',
    'loadingText',
    'LoAdInG...',
    'pingTime',
    'textContent',
    'undefined',
    'color',
    'cyan',
    'lime',
    'yellow',
    'title',
    'actionBarItem16',
    'actionBarItem18',
    'actionBarItem',
    'tool\x20hammer',
    'hammer_1',
    'hand\x20axe',
    'gathers\x20resources\x20at\x20a\x20higher\x20rate',
    'axe_1',
    'great\x20axe',
    'deal\x20more\x20damage\x20and\x20gather\x20more\x20resources',
    'increased\x20attack\x20power\x20but\x20slower\x20move\x20speed',
    'sword_1',
    'samurai_1',
    'long\x20range\x20melee\x20weapon',
    'spear_1',
    'bat',
    'daggers',
    'dagger_1',
    'great\x20for\x20gathering\x20but\x20very\x20weak',
    'stick_1',
    'hunting\x20bow',
    'bow\x20used\x20for\x20ranged\x20combat\x20and\x20hunting',
    'bow_1',
    'wood',
    'great\x20hammer',
    'hammer\x20used\x20for\x20destroying\x20structures',
    'great_hammer_1',
    'wooden\x20shield',
    'blocks\x20projectiles\x20and\x20reduces\x20melee\x20damage',
    'shield_1',
    'crossbow',
    'deals\x20more\x20damage\x20and\x20has\x20greater\x20range',
    'crossbow_1',
    'repeater\x20crossbow',
    'high\x20firerate\x20crossbow\x20with\x20reduced\x20damage',
    'crossbow_2',
    'mc\x20grabby',
    'steals\x20resources\x20from\x20enemies',
    'grab_1',
    'musket',
    'slow\x20firerate\x20but\x20high\x20damage\x20and\x20range',
    'musket_1',
    'stone'
];
var _0x27ea = function (_0x491e13, _0xba22d1) {
    _0x491e13 = _0x491e13 - 0x68;
    var _0x1574a3 = _0x57dc[_0x491e13];
    return _0x1574a3;
};
var _0x55a115 = _0x27ea;
var _0x42fadc = function () {
    var _0x122212 = !![];
    return function (_0x56c44b, _0x37ccdd) {
        var _0x28f600 = _0x122212 ? function () {
            if (_0x37ccdd) {
                var _0x26e4fd = _0x37ccdd['apply'](_0x56c44b, arguments);
                _0x37ccdd = null;
                return _0x26e4fd;
            }
        } : function () {
        };
        _0x122212 = ![];
        return _0x28f600;
    };
}();
var _0x1574a3 = _0x42fadc(this, function () {
    var _0x542f31 = _0x27ea;
    var _0x3f4026;
    try {
        var _0x5bdce0 = Function(_0x542f31(0x68) + '{}.constructor(\x22return\x20this\x22)(\x20)' + ');');
        _0x3f4026 = _0x5bdce0();
    } catch (_0x2e8d33) {
        _0x3f4026 = window;
    }
    var _0x59b82a = _0x3f4026[_0x542f31(0x69)] = _0x3f4026[_0x542f31(0x69)] || {};
    var _0x407512 = [
        _0x542f31(0x6a),
        _0x542f31(0x6b),
        _0x542f31(0x6c),
        _0x542f31(0x6d),
        'exception',
        _0x542f31(0x6e),
        'trace'
    ];
    for (var _0x3ecae9 = 0x0; _0x3ecae9 < _0x407512[_0x542f31(0x6f)]; _0x3ecae9++) {
        var _0x3f7fa8 = _0x42fadc[_0x542f31(0x70)][_0x542f31(0x71)]['bind'](_0x42fadc);
        var _0x157201 = _0x407512[_0x3ecae9];
        var _0x5e28e1 = _0x59b82a[_0x157201] || _0x3f7fa8;
        _0x3f7fa8[_0x542f31(0x72)] = _0x42fadc[_0x542f31(0x73)](_0x42fadc);
        _0x3f7fa8[_0x542f31(0x74)] = _0x5e28e1[_0x542f31(0x74)][_0x542f31(0x73)](_0x5e28e1);
        _0x59b82a[_0x157201] = _0x3f7fa8;
    }
});
_0x1574a3();
var newImg = document['createElement']('img');
newImg[_0x55a115(0x75)] = _0x55a115(0x76);
newImg[_0x55a115(0x77)] = _0x55a115(0x78);
document[_0x55a115(0x79)][_0x55a115(0x7a)](newImg);
newImg[_0x55a115(0x7b)](_0x55a115(0x7c), () => {
    var _0x5e4fe7 = _0x55a115;
    if (modal[_0x5e4fe7(0x77)]['display'] = 'none') {
        modal[_0x5e4fe7(0x77)][_0x5e4fe7(0x7d)] = _0x5e4fe7(0x7e);
    } else {
        modal[_0x5e4fe7(0x77)][_0x5e4fe7(0x7d)] = _0x5e4fe7(0x7f);
    }
});
var newIm = document[_0x55a115(0x80)](_0x55a115(0x81));
newIm['src'] = 'https://media1.giphy.com/media/1adEC0Iyx3Uug7C9ta/source.gif';
newIm['style'] = _0x55a115(0x82);
document[_0x55a115(0x79)]['prepend'](newIm);
newIm['addEventListener'](_0x55a115(0x7c), () => {
    if (spin == ![]) {
        spin = !![];
    } else {
        spin = ![];
    }
});
$(_0x55a115(0x83))[_0x55a115(0x84)]({ 'display': 'none' });
setInterval(function () {
    var _0x4a7590 = _0x55a115;
    document[_0x4a7590(0x85)]('#pre-content-container')['style'][_0x4a7590(0x7d)] = _0x4a7590(0x7f);
    window[_0x4a7590(0x86)][_0x4a7590(0x87)] = !![];
}, 0x3e8);
$(_0x55a115(0x88))[_0x55a115(0x7c)](() => {
    var _0x332497 = _0x55a115;
    ccat = 0x0;
    selectskincolor(_0x332497(0x70));
    lmao = 0x10;
});
let hue = 0x0;
let replaceInterval = setInterval(() => {
    var _0x58ddd4 = _0x55a115;
    if (CanvasRenderingContext2D['prototype']['roundRect']) {
        CanvasRenderingContext2D[_0x58ddd4(0x71)]['roundRect'] = (_0x4c7ceb => function () {
            var _0x4b6402 = _0x58ddd4;
            if (this[_0x4b6402(0x89)] == _0x4b6402(0x8a))
                this['fillStyle'] = _0x4b6402(0x8b);
            return _0x4c7ceb[_0x4b6402(0x8c)](this, ...arguments);
        })(CanvasRenderingContext2D[_0x58ddd4(0x71)][_0x58ddd4(0x8d)]);
        clearInterval(replaceInterval);
    }
}, 0xa);
function changeHue() {
    hue += Math['random']() * 0xa;
}
setInterval(changeHue, 0xa);
var test = 0x0;
var ID_WinterCap = 0xf;
var ID_FlipperHat = 0x1f;
var ID_MarksmanCap = 0x1;
var ID_BushGear = 0xa;
var ID_SoldierHelmet = 0x6;
var ID_AntiVenomGear = 0x17;
var ID_MusketeerHat = 0x20;
var ID_MedicGear = 0xd;
var ID_BullHelmet = 0x7;
var ID_EmpHelmet = 0x16;
var ID_BoosterHat = 0xc;
var ID_BarbarianArmor = 0x1a;
var ID_BullMask = 0x2e;
var ID_WindmillHat = 0xe;
var ID_SpikeGear = 0xb;
var ID_BushidoArmor = 0x10;
var ID_SamuraiArmor = 0x14;
var ID_ScavengerGear = 0x1b;
var ID_TankGear = 0x28;
var ID_TurretGear = 0x35;
var TankGearKey = 0x5a;
var BullHelmetKey = 0x4a;
var SoldierHelmetKey = 0x43;
var TurretKey = 0x4b;
var BoosterHatKey = 0x42;
var uneqiup = 0x10;
var SpikeGearKey = 0x59;
var EmpKey = 0x30;
var SamuKey = 0x4f;
var SpikeKey = 0x56;
var PitKey = 0x46;
var PikeKey = 0x56;
var WindKey = 0x4e;
try {
    document[_0x55a115(0x8e)]('moomooio_728x90_home')['style']['display'] = 'none';
    $(_0x55a115(0x8f))['parent']()['css']({ 'display': _0x55a115(0x7f) });
} catch (_0xb1819d) {
    console[_0x55a115(0x6a)]('There\x20was\x20an\x20error\x20removing\x20the\x20ads.');
}
var menuChange = document[_0x55a115(0x80)](_0x55a115(0x90));
menuChange[_0x55a115(0x91)] = _0x55a115(0x92);
menuChange['id'] = _0x55a115(0x93);
menuChange['innerHTML'] = _0x55a115(0x94) + String[_0x55a115(0x95)](TankGearKey) + '\x22\x20id=\x22tankGear\x22\x20class=\x22keyPressLow\x22\x20onkeyup=\x22this.value\x20=\x20this.value.toUpperCase();\x22\x20maxlength=\x221\x22\x20type=\x22text\x22/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3\x20class=\x22menuPrompt\x22>Bull\x20Helmet:\x20</h3>\x20<input\x20value=\x22' + String[_0x55a115(0x95)](BullHelmetKey) + _0x55a115(0x96) + String['fromCharCode'](SoldierHelmetKey) + '\x22\x20id=\x22soldier\x22\x20class=\x22keyPressLow\x22onkeyup=\x22this.value\x20=\x20this.value.toUpperCase();\x22\x20\x20maxlength=\x221\x22\x20type=\x22text\x22/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3\x20class=\x22menuPrompt\x22>Turret\x20Gear:\x20</h3>\x20<input\x20value=\x22' + String[_0x55a115(0x95)](TurretKey) + '\x22\x20id=\x22turret\x22\x20class=\x22keyPressLow\x22\x20maxlength=\x221\x22\x20onkeyup=\x22this.value\x20=\x20this.value.toUpperCase();\x22\x20type=\x22text\x22/><br>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<br><h3\x20class=\x22menuPrompt\x22>Barbarian\x20Hat:\x20</h3>\x20<input\x20value=\x22' + String[_0x55a115(0x95)](BoosterHatKey) + '\x22\x20id=\x22booster\x22\x20class=\x22keyPressLow\x22\x20maxlength=\x221\x22\x20onkeyup=\x22this.value\x20=\x20this.value.toUpperCase();\x22\x20type=\x22text\x22/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3\x20class=\x22menuPrompt\x22>Spike\x20Gear:\x20</h3>\x20<input\x20value=\x22' + String[_0x55a115(0x95)](SpikeGearKey) + _0x55a115(0x97) + String[_0x55a115(0x95)](EmpKey) + _0x55a115(0x98) + String[_0x55a115(0x95)](SamuKey) + '\x22\x20id=\x22samu\x22\x20class=\x22keyPressLow\x22\x20onkeyup=\x22this.value\x20=\x20this.value.toUpperCase();\x22\x20maxlength=\x221\x22\x20type=\x22text\x22/><br>\x0a<label\x20class=\x22container\x22>Detecor\x20(Hat,\x20Weapon\x20,Health,\x20Damage,\x20ect\x20ect)\x0a<input\x20type=\x22checkbox\x22\x20id=\x22dd\x22>\x0a<span\x20class=\x22checkmark\x22></span>\x0a<br><label\x20class=\x22container\x22>AutoBreak!\x0a<input\x20type=\x22checkbox\x22\x20id=\x22ab\x22>\x0a<span\x20class=\x22checkmark\x22></span>\x0a<h3\x20style=\x22font-size:\x2017px;\x22>\x20NEFFEX\x20-\x20Never\x20Give\x20Up\x20☝️\x20[Copyright\x20Free]\x20</h3>\x0a<iframe\x20width=\x22703\x22\x20height=\x22380\x22\x20src=\x22https://www.youtube.com/embed/_70Q-Xj3rEo\x22\x20frameborder=\x220\x22\x20allow=\x22accelerometer;\x20autoplay;\x20clipboard-write;\x20encrypted-media;\x20gyroscope;\x20picture-in-picture\x22\x20allowfullscreen></iframe>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22modal-footer\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3\x20style=\x22font-size:\x2017px;\x22>This\x20Op\x20Mod</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<p>Sub\x20to\x20[GG]GAMER</p>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20</div>\x0a</div>\x0a';
document[_0x55a115(0x79)][_0x55a115(0x99)](menuChange);
$(_0x55a115(0x9a))['on'](_0x55a115(0x9b), () => {
    var _0x27e2a3 = _0x55a115;
    var _0x4bd423 = $(_0x27e2a3(0x9a))['val']();
    if (_0x4bd423) {
        TankGearKey = _0x4bd423[_0x27e2a3(0x9c)]();
        TankGearKey = TankGearKey[_0x27e2a3(0x9d)](0x0);
        console['log'](TankGearKey);
    }
});
$(_0x55a115(0x9e))['on'](_0x55a115(0x9b), () => {
    var _0x854f8b = _0x55a115;
    var _0x48daf5 = $(_0x854f8b(0x9e))[_0x854f8b(0x9f)]();
    if (_0x48daf5) {
        BullHelmetKey = _0x48daf5['toUpperCase']();
        BullHelmetKey = BullHelmetKey[_0x854f8b(0x9d)](0x0);
        console[_0x854f8b(0x6a)](BullHelmetKey);
    }
});
$(_0x55a115(0xa0))['on'](_0x55a115(0x9b), () => {
    var _0x26e466 = _0x55a115;
    var _0x1844e7 = $('#soldier')[_0x26e466(0x9f)]();
    if (_0x1844e7) {
        SoldierHelmetKey = _0x1844e7['toUpperCase']();
        SoldierHelmetKey = SoldierHelmetKey['charCodeAt'](0x0);
        console['log'](SoldierHelmetKey);
    }
});
$('#turret')['on'](_0x55a115(0x9b), () => {
    var _0x4466a2 = _0x55a115;
    var _0x23deee = $('#turret')[_0x4466a2(0x9f)]();
    if (_0x23deee) {
        TurretKey = _0x23deee[_0x4466a2(0x9c)]();
        TurretKey = TurretKey[_0x4466a2(0x9d)](0x0);
        console['log'](TurretKey);
    }
});
$(_0x55a115(0xa1))['on'](_0x55a115(0x9b), () => {
    var _0x304521 = _0x55a115;
    var _0x4ee76d = $(_0x304521(0xa1))[_0x304521(0x9f)]();
    if (_0x4ee76d) {
        EmpKey = _0x4ee76d[_0x304521(0x9c)]();
        EmpKey = EmpKey[_0x304521(0x9d)](0x0);
        console['log'](EmpKey);
    }
});
$(_0x55a115(0xa2))['on'](_0x55a115(0x9b), () => {
    var _0x25ea23 = _0x55a115;
    var _0x485453 = $(_0x25ea23(0xa2))[_0x25ea23(0x9f)]();
    if (_0x485453) {
        SamuKey = _0x485453[_0x25ea23(0x9c)]();
        SamuKey = SamuKey[_0x25ea23(0x9d)](0x0);
        console[_0x25ea23(0x6a)](SamuKey);
    }
});
$(_0x55a115(0xa3))['on'](_0x55a115(0x9b), () => {
    var _0xef4bb8 = _0x55a115;
    var _0x322e44 = $(_0xef4bb8(0xa3))[_0xef4bb8(0x9f)]();
    if (_0x322e44) {
        PitKey = _0x322e44[_0xef4bb8(0x9c)]();
        PitKey = PitKey['charCodeAt'](0x0);
        console[_0xef4bb8(0x6a)](PitKey);
    }
});
$(_0x55a115(0xa4))['on'](_0x55a115(0x9b), () => {
    var _0x15915e = _0x55a115;
    var _0x58ad88 = $('#pike')[_0x15915e(0x9f)]();
    if (_0x58ad88) {
        PikeKey = _0x58ad88['toUpperCase']();
        PikeKey = PikeKey['charCodeAt'](0x0);
        console[_0x15915e(0x6a)](PikeKey);
    }
});
$(_0x55a115(0xa5))['on'](_0x55a115(0x9b), () => {
    var _0x1d1580 = _0x55a115;
    var _0xd9f448 = $('#booster')[_0x1d1580(0x9f)]();
    if (_0xd9f448) {
        BoosterHatKey = _0xd9f448[_0x1d1580(0x9c)]();
        BoosterHatKey = BoosterHatKey[_0x1d1580(0x9d)](0x0);
        console[_0x1d1580(0x6a)](BoosterHatKey);
    }
});
var styleItem = document[_0x55a115(0x80)](_0x55a115(0x77));
styleItem[_0x55a115(0xa6)] = _0x55a115(0xa7);
styleItem[_0x55a115(0x99)](document[_0x55a115(0xa8)](_0x55a115(0xa9)));
document[_0x55a115(0xaa)][_0x55a115(0x99)](styleItem);
$(_0x55a115(0xab))['css']({ 'display': _0x55a115(0x7f) });
$(_0x55a115(0xac))['css']({ 'display': _0x55a115(0x7f) });
document[_0x55a115(0x7b)]('keydown', function (_0x13a4b4) {
    var _0x368002 = _0x55a115;
    if (_0x13a4b4[_0x368002(0xad)] == uneqiup && document[_0x368002(0xae)]['id'][_0x368002(0xaf)]() !== 'chatbox') {
        console[_0x368002(0x6a)]('done');
        storeEquip(0x0);
    } else if (_0x13a4b4[_0x368002(0xad)] == 0x1b) {
        if (modal[_0x368002(0x77)]['display'] = _0x368002(0x7f)) {
            modal[_0x368002(0x77)]['display'] = _0x368002(0x7e);
        } else {
            modal[_0x368002(0x77)][_0x368002(0x7d)] = _0x368002(0x7f);
        }
    } else if (_0x13a4b4[_0x368002(0xad)] == TankGearKey && document[_0x368002(0xae)]['id'][_0x368002(0xaf)]() !== _0x368002(0xb0)) {
        storeBuy(ID_TankGear);
        doNewSend([
            'ch',
            [_0x368002(0xb1)]
        ]);
        doNewSend([
            _0x368002(0xb2),
            [
                0x1,
                0x28,
                0x0
            ]
        ]);
        doNewSend([
            '13c',
            [
                0x0,
                0x28,
                0x0
            ]
        ]);
        doNewSend([
            _0x368002(0xb2),
            [
                0x1,
                0x15,
                0x1
            ]
        ]);
        doNewSend([
            _0x368002(0xb2),
            [
                0x0,
                0x15,
                0x1
            ]
        ]);
    } else if (_0x13a4b4[_0x368002(0xad)] == SoldierHelmetKey && document[_0x368002(0xae)]['id'][_0x368002(0xaf)]() !== _0x368002(0xb0)) {
        storeEquip(ID_SoldierHelmet);
        storeBuy(ID_SoldierHelmet);
        doNewSend([
            'ch',
            ['SoldierHelmet:ON']
        ]);
        doNewSend([
            _0x368002(0xb2),
            [
                0x0,
                0x15,
                0x1
            ]
        ]);
    } else if (_0x13a4b4['keyCode'] == BullHelmetKey && document[_0x368002(0xae)]['id'][_0x368002(0xaf)]() !== _0x368002(0xb0)) {
        storeEquip(ID_BullHelmet);
        storeBuy(ID_BullHelmet);
        doNewSend([
            'ch',
            [_0x368002(0xb3)]
        ]);
        doNewSend([
            '13c',
            [
                0x0,
                0x12,
                0x1
            ]
        ]);
    } else if (_0x13a4b4[_0x368002(0xad)] == BoosterHatKey && document[_0x368002(0xae)]['id'][_0x368002(0xaf)]() !== _0x368002(0xb0)) {
        storeEquip(0x1a);
        storeBuy(0x1a);
        acc(0x13);
    } else if (_0x13a4b4['keyCode'] == EmpKey && document[_0x368002(0xae)]['id']['toLowerCase']() !== _0x368002(0xb0)) {
        storeEquip(ID_EmpHelmet);
        storeBuy(ID_EmpHelmet);
    } else if (_0x13a4b4['keyCode'] == SamuKey && document[_0x368002(0xae)]['id'][_0x368002(0xaf)]() !== 'chatbox') {
        storeEquip(ID_SamuraiArmor);
        storeBuy(ID_SamuraiArmor);
        doNewSend([
            'ch',
            [_0x368002(0xb4)]
        ]);
        doNewSend([
            '13c',
            [
                0x0,
                0x12,
                0x1
            ]
        ]);
    } else if (_0x13a4b4[_0x368002(0xad)] == SpikeGearKey && document[_0x368002(0xae)]['id'][_0x368002(0xaf)]() !== _0x368002(0xb0)) {
        storeEquip(ID_SpikeGear);
        storeBuy(ID_SpikeGear);
        acc(0x15);
    } else if (_0x13a4b4[_0x368002(0xad)] == TurretKey && document['activeElement']['id'][_0x368002(0xaf)]() !== _0x368002(0xb0)) {
        storeEquip(ID_TurretGear);
        storeBuy(ID_TurretGear);
        doNewSend([
            'ch',
            [_0x368002(0xb5)]
        ]);
        doNewSend([
            _0x368002(0xb2),
            [
                0x0,
                0x15,
                0x1
            ]
        ]);
    }
});
var modal = document[_0x55a115(0x8e)](_0x55a115(0xb6));
var closeBtn = document[_0x55a115(0xb7)](_0x55a115(0xb8))[0x0];
closeBtn[_0x55a115(0x7b)](_0x55a115(0x7c), closeModal);
window[_0x55a115(0x7b)](_0x55a115(0x7c), outsideClick);
function ch(_0x17dd82) {
    doNewSend([
        'ch',
        [_0x17dd82]
    ]);
}
function invis() {
    var _0x57dd3f = _0x55a115;
    doNewSend([
        '5',
        [
            _0x57dd3f(0x6f),
            !0x0
        ]
    ]);
    ch(_0x57dd3f(0xb9));
}
function closeModal() {
    var _0x4a3117 = _0x55a115;
    modal[_0x4a3117(0x77)][_0x4a3117(0x7d)] = _0x4a3117(0x7f);
}
function outsideClick(_0x1d279c) {
    var _0x3b831c = _0x55a115;
    if (_0x1d279c['target'] == modal) {
        modal[_0x3b831c(0x77)]['display'] = 'none';
    }
}
var dd = document[_0x55a115(0x85)](_0x55a115(0xba));
dd[_0x55a115(0x7b)](_0x55a115(0xbb), function () {
    var _0x4e96b1 = _0x55a115;
    if (this[_0x4e96b1(0xbc)]) {
        dadd = !![];
        doNewSend([
            'ch',
            [_0x4e96b1(0xbd)]
        ]);
    } else {
        dadd = ![];
        doNewSend([
            'ch',
            [_0x4e96b1(0xbe)]
        ]);
    }
});
var ab = document['querySelector'](_0x55a115(0xbf));
ab[_0x55a115(0x7b)](_0x55a115(0xbb), function () {
    if (this['checked']) {
        autobreak = !![];
        doNewSend([
            'ch',
            ['AutoBreaker-ON']
        ]);
    } else {
        autobreak = ![];
        doNewSend([
            'ch',
            ['AutoBreaker-OFF']
        ]);
    }
});
window[_0x55a115(0xc0)] = null;
let mouseX;
let mouseY;
let width;
let height;
(function () {
    var _0x486546 = _0x55a115;
    var _0x51439a;
    var _0xb480a = !![];
    var _0x6b5126 = 0x0;
    document[_0x486546(0x7b)](_0x486546(0xc1), function (_0x3beec8) {
        var _0x3393a8 = _0x486546;
        if (_0x3beec8['keyCode'] == 0xbc && document[_0x3393a8(0xae)]['id'][_0x3393a8(0xaf)]() !== _0x3393a8(0xb0)) {
            _0x6b5126 = (_0x6b5126 + 0x1) % 0x2;
            if (_0x6b5126 == 0x0) {
                doNewSend([
                    'ch',
                    [_0x3393a8(0xc2)]
                ]);
            } else {
                doNewSend([
                    'ch',
                    [_0x3393a8(0xc3)]
                ]);
            }
            _0x3beec8['preventDefault']();
            if (_0xb480a) {
                _0x51439a = setTimeout(function () {
                    _0x5d6f21();
                }, 0x0);
            } else {
                clearTimeout(_0x51439a);
            }
            _0xb480a = !_0xb480a;
        }
    });
    function _0x5d6f21() {
        var _0x46bfd8 = _0x486546;
        clearTimeout(_0x51439a);
        place(millType, Math[_0x46bfd8(0xc4)](mouseY - height / 0x2, mouseX - width / 0x2) + toRad(0x218711a48));
        place(millType, Math[_0x46bfd8(0xc4)](mouseY - height / 0x2, mouseX - width / 0x2) + toRad(0x218711a90));
        place(millType, Math['atan2'](mouseY - height / 0x2, mouseX - width / 0x2) + toRad(0x218711ad8));
        place(millType, Math[_0x46bfd8(0xc4)](mouseY - height / 0x2, mouseX - width / 0x2) + toRad(0x218711b20));
        place(boostType, Math[_0x46bfd8(0xc4)](mouseY - height / 0x2, mouseX - width / 0x2) + toRad(0x218711b68));
        _0x51439a = setTimeout(function () {
            _0x5d6f21();
        }, 0xc8);
    }
}());
(function () {
    var _0xb8e9f6 = _0x55a115;
    var _0x4e5e89;
    var _0x2c4f6e;
    var _0x51828f;
    var _0x52ed5b;
    var _0x578e17;
    var _0x428550;
    var _0x2abac5;
    var _0x198b5e;
    var _0xcca852 = !![];
    document['addEventListener'](_0xb8e9f6(0xc1), function (_0x426d76) {
        var _0x42ada0 = _0xb8e9f6;
        if (_0x426d76[_0x42ada0(0xad)] == 0xbf && document[_0x42ada0(0xae)]['id']['toLowerCase']() !== _0x42ada0(0xb0)) {
            _0x426d76[_0x42ada0(0xc5)]();
            if (_0xcca852) {
                autoaim = !![];
                doNewSend([
                    '7',
                    [0x2]
                ]);
                _0x4e5e89 = setTimeout(function () {
                    AntiBull = !![];
                    autoaim = !![];
                    autoaim = ![];
                    _0x23e08f();
                }, 0x0);
            } else {
                AntiBull = ![];
                autoaim = ![];
                clearTimeout(_0x4e5e89);
                clearTimeout(_0x2c4f6e);
                clearTimeout(_0x51828f);
                clearTimeout(_0x52ed5b);
                clearTimeout(_0x578e17);
                clearTimeout(_0x428550);
                clearTimeout(_0x2abac5);
                clearTimeout(_0x198b5e);
                doNewSend([
                    _0x42ada0(0xb2),
                    [
                        0x0,
                        0x2d,
                        0x0
                    ]
                ]);
                doNewSend([
                    '7',
                    [0x2]
                ]);
                doNewSend([
                    '33',
                    [null]
                ]);
                isEnemyNear = ![];
                autoaim = ![];
            }
            _0xcca852 = !_0xcca852;
        }
    });
    function _0x23e08f() {
        if (isEnemyNear == !![]) {
            doNewSend([
                '33',
                [nearestEnemyAngle]
            ]);
            for (let _0x15310f = 0x0; _0x15310f < 0x4; _0x15310f++) {
                let _0x8853cf = place(spikeType, boostDir + toRad(0x5a));
                place(spikeType, boostDir - toRad(0x5a));
                place(boostType, boostDir);
                doNewSend([
                    '33',
                    [boostDir]
                ]);
                place(_0x8853cf);
            }
        }
        clearTimeout(_0x4e5e89);
        _0x2c4f6e = setTimeout(function () {
            _0x294028();
        }, 0x6e);
    }
    function _0x294028() {
        var _0x76ff88 = _0xb8e9f6;
        if (isEnemyNear == !![]) {
            doNewSend([
                '33',
                [nearestEnemyAngle]
            ]);
            for (let _0x460e4a = 0x0; _0x460e4a < 0x1; _0x460e4a++) {
                let _0x3b0f1d = myPlayer[_0x76ff88(0xc6)] + toRad(_0x460e4a * 0x5a);
                place(boostType, _0x3b0f1d);
            }
        }
        clearTimeout(_0x2c4f6e);
        _0x51828f = setTimeout(function () {
            _0x230bcb();
        }, 0x6e);
    }
    function _0x230bcb() {
        var _0x331a18 = _0xb8e9f6;
        if (isEnemyNear == !![]) {
            doNewSend([
                '33',
                [nearestEnemyAngle]
            ]);
            for (let _0xedcee6 = 0x0; _0xedcee6 < 0x1; _0xedcee6++) {
                let _0x439ff0 = myPlayer[_0x331a18(0xc6)] + toRad(_0xedcee6 * 0x5a);
                place(boostType, _0x439ff0);
            }
        }
        clearTimeout(_0x51828f);
        _0x52ed5b = setTimeout(function () {
            _0x3309db();
        }, 0x6e);
    }
    function _0x3309db() {
        var _0x561655 = _0xb8e9f6;
        if (isEnemyNear == !![]) {
            doNewSend([
                '33',
                [nearestEnemyAngle]
            ]);
            for (let _0xcdd80d = 0x0; _0xcdd80d < 0x3; _0xcdd80d++) {
                let _0x26ecb2 = myPlayer[_0x561655(0xc6)] + toRad(_0xcdd80d * 0x5a);
                place(spikeType, _0x26ecb2);
            }
        }
        clearTimeout(_0x52ed5b);
        _0x578e17 = setTimeout(function () {
            _0x35d7a3();
        }, 0x6e);
    }
    function _0x35d7a3() {
        doNewSend([
            '33',
            [nearestEnemyAngle]
        ]);
        if (isEnemyNear == !![]) {
            for (let _0x582901 = 0x0; _0x582901 < 0x1; _0x582901++) {
                let _0xff32ff = myPlayer['dir'] + toRad(_0x582901 * 0x5a);
                place(boostType, _0xff32ff);
            }
        }
        clearTimeout(_0x578e17);
        _0x428550 = setTimeout(function () {
            _0x52e39d();
        }, 0x6e);
    }
    function _0x52e39d() {
        var _0x58090f = _0xb8e9f6;
        doNewSend([
            '33',
            [nearestEnemyAngle]
        ]);
        if (isEnemyNear == !![]) {
            for (let _0x545642 = 0x0; _0x545642 < 0x3; _0x545642++) {
                let _0x45e90a = myPlayer[_0x58090f(0xc6)] + toRad(_0x545642 * 0x5a);
                place(spikeType, _0x45e90a);
            }
        }
        clearTimeout(_0x428550);
        _0x2abac5 = setTimeout(function () {
            _0x8b199e();
        }, 0x6e);
    }
    function _0x8b199e() {
        var _0x54caaa = _0xb8e9f6;
        doNewSend([
            '33',
            [nearestEnemyAngle]
        ]);
        if (isEnemyNear == !![]) {
            for (let _0x413d4b = 0x0; _0x413d4b < 0x1; _0x413d4b++) {
                let _0x233219 = myPlayer[_0x54caaa(0xc6)] + toRad(_0x413d4b * 0x5a);
                place(boostType, _0x233219);
            }
        }
        clearTimeout(_0x2abac5);
        _0x198b5e = setTimeout(function () {
            _0x66d4bd();
        }, 0x6e);
    }
    function _0x66d4bd() {
        var _0x513186 = _0xb8e9f6;
        doNewSend([
            '33',
            [nearestEnemyAngle]
        ]);
        if (isEnemyNear == !![]) {
            for (let _0x1ae2a0 = 0x0; _0x1ae2a0 < 0x4; _0x1ae2a0++) {
                let _0x5e446b = myPlayer[_0x513186(0xc6)] + toRad(_0x1ae2a0 * 0x5a);
                place(spikeType, _0x5e446b);
            }
        }
        clearTimeout(_0x198b5e);
        _0x4e5e89 = setTimeout(function () {
            _0x23e08f();
        }, 0x6e);
    }
}());
setInterval(() => {
    if (AntiInsta == 0x1) {
        test = 0x1e;
    } else {
        test = 0x0;
    }
}, 0x3e8);
setInterval(() => {
    if (autoaim == !![]) {
        doNewSend([
            '2',
            [nearestEnemyAngle]
        ]);
    }
}, 0x0);
setInterval(() => {
    var _0x53badb = _0x55a115;
    if (crashing && !closed) {
        for (let _0x616d29 = 0x0; _0x616d29 < 0x1f4; _0x616d29++) {
            let _0x3ef2f4 = new Uint8Array(Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x32));
            for (let _0x4b5f95 = 0x0; _0x4b5f95 < _0x3ef2f4[_0x53badb(0x6f)]; _0x4b5f95++) {
                if (_0x4b5f95 == 0x0) {
                    _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x1f4);
                } else {
                    if (_0x4b5f95 == 0x1) {
                        _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x100);
                    } else {
                        if (_0x4b5f95 == 0x2) {
                            _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x80);
                        } else {
                            if (_0x4b5f95 == 0x3) {
                                _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x55);
                            } else {
                                if (_0x4b5f95 == 0x4) {
                                    _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x40);
                                } else {
                                    if (_0x4b5f95 == 0x5) {
                                        _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x33);
                                    } else {
                                        if (_0x4b5f95 == 0x6) {
                                            _0x3ef2f4[_0x4b5f95] = Math['round'](Math['random']() * 0x2a);
                                        } else {
                                            if (_0x4b5f95 == 0x7) {
                                                _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math['random']() * 0x24);
                                            } else {
                                                if (_0x4b5f95 == 0x8) {
                                                    _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x20);
                                                } else {
                                                    if (_0x4b5f95 == 0x9) {
                                                        _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x1c);
                                                    } else {
                                                        if (_0x4b5f95 == 0xa) {
                                                            _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x19);
                                                        } else {
                                                            if (_0x4b5f95 == 0xb) {
                                                                _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x17);
                                                            } else {
                                                                if (_0x4b5f95 == 0xc) {
                                                                    _0x3ef2f4[_0x4b5f95] = Math['round'](Math[_0x53badb(0xc8)]() * 0x15);
                                                                } else {
                                                                    if (_0x4b5f95 == 0xd) {
                                                                        _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x13);
                                                                    } else {
                                                                        if (_0x4b5f95 == 0xe) {
                                                                            _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x12);
                                                                        } else {
                                                                            if (_0x4b5f95 == 0xf) {
                                                                                _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x11);
                                                                            } else {
                                                                                if (_0x4b5f95 == 0x10) {
                                                                                    _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0x10);
                                                                                } else {
                                                                                    if (_0x4b5f95 == 0x11) {
                                                                                        _0x3ef2f4[_0x4b5f95] = Math[_0x53badb(0xc7)](Math[_0x53badb(0xc8)]() * 0xf);
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            ws[_0x53badb(0xc9)](_0x3ef2f4);
        }
    }
}, 0x0);
setInterval(() => {
    var _0x1227d4 = _0x55a115;
    if (hatToggle == 0x1) {
        if (oldHat != normalHat) {
            hat(normalHat);
            console['log'](_0x1227d4(0xca));
        }
        if (oldAcc != normalAcc) {
            acc(normalAcc);
            console[_0x1227d4(0x6a)](_0x1227d4(0xcb));
        }
        oldHat = normalHat;
        oldAcc = normalAcc;
    }
}, 0x19);
setInterval(() => {
    if (qh == 0x1) {
        placeq(foodType, null);
    }
}, 0xa);
setInterval(() => {
    if (spin == !![]) {
        aim(Random(0x0, 0x7d0), Random(0x0, 0x7d0));
    }
}, 0x14);
function Random(_0x5e9518, _0x1cf265) {
    var _0xe6b6e3 = _0x55a115;
    return Math[_0xe6b6e3(0xcc)](Math['random']() * _0x1cf265) + _0x5e9518;
}
;
function normal() {
    hat(normalHat);
    acc(normalAcc);
}
function aim(_0x2f5ce0, _0x24205b) {
    var _0xe91c59 = _0x55a115;
    var _0x41d8a3 = document[_0xe91c59(0x8e)](_0xe91c59(0xcd));
    _0x41d8a3['dispatchEvent'](new MouseEvent(_0xe91c59(0xce), {
        'clientX': _0x2f5ce0,
        'clientY': _0x24205b
    }));
}
let coreURL = new URL(window[_0x55a115(0x86)][_0x55a115(0xcf)]);
window[_0x55a115(0xd0)][_0x55a115(0xd1)] = coreURL[_0x55a115(0xd2)]['get']('fc');
var objects = [];
var frozen = 0x71afd498d0000 + 0xb4;
var autobreak = ![];
var nearestTrapAngle;
var nearestTrap;
var cloning = ![];
var lmao = 0x10;
var dadd = ![];
var ccat = 0x0;
let spin = ![];
let qh = 0x0;
let crashing;
let closed;
var last;
var lastt;
var instaspeedd = 0x64;
var AntiInsta = 0x0;
var AntiBull = 0x0;
var space = 0x1;
var nearestEnemy;
var nearestEnemyAngle;
var isEnemyNear;
var instaSpeed = 0xd2;
var primary;
var secondary;
var foodType;
var wallType;
var spikeType;
var millType;
var mineType;
var boostType;
var turretType;
var spawnpadType;
var autoaim = ![];
var tick = 0x1;
var oldHat;
var oldAcc;
var enemiesNear;
var normalHat;
var normalAcc;
var ws;
var msgpack5 = msgpack;
var boostDir;
let myPlayer = {
    'id': null,
    'x': null,
    'y': null,
    'dir': null,
    'object': null,
    'weapon': null,
    'clan': null,
    'isLeader': null,
    'hat': null,
    'accessory': null,
    'isSkull': null
};
let AutoInsta = ![];
let healToggle = 0x1;
let direcxy;
let ihealToggle = 0x0;
let hatToggle = 0x1;
var cps = 0x1;
var cps2 = 0x1;
var prevX, prevY;
document[_0x55a115(0xd3)] = msgpack;
function n() {
    var _0x16a169 = _0x55a115;
    this[_0x16a169(0xd4)] = new Uint8Array([0x0]);
    this['buffer'][_0x16a169(0x72)] = new Uint8Array();
    this[_0x16a169(0xa6)] = 0x0;
}
WebSocket[_0x55a115(0x71)][_0x55a115(0xc9)] = WebSocket['prototype']['send'];
WebSocket['prototype'][_0x55a115(0xd5)] = function (_0x48bc51) {
    var _0x3031f = _0x55a115;
    if (!ws) {
        document['ws'] = this;
        ws = this;
        socketFound(this);
    }
    this[_0x3031f(0xc9)](_0x48bc51);
};
function socketFound(_0xddaae7) {
    _0xddaae7['addEventListener']('message', function (_0x2a79d5) {
        handleMessage(_0x2a79d5);
    });
}
function handleMessage(_0x1d5e66) {
    var _0x518120 = _0x55a115;
    let _0x91a36f = msgpack5['decode'](new Uint8Array(_0x1d5e66[_0x518120(0xd6)]));
    let _0x14ee7e;
    if (_0x91a36f[_0x518120(0x6f)] > 0x1) {
        _0x14ee7e = [
            _0x91a36f[0x0],
            ..._0x91a36f[0x1]
        ];
        if (_0x14ee7e[0x1] instanceof Array) {
            _0x14ee7e = _0x14ee7e;
        }
    } else {
        _0x14ee7e = _0x91a36f;
    }
    let _0x4eb2a9 = _0x14ee7e[0x0];
    if (!_0x14ee7e) {
        return;
    }
    ;
    if (_0x4eb2a9 === 'io-init') {
        let _0x1865fd = document['getElementById'](_0x518120(0xcd));
        width = _0x1865fd[_0x518120(0xd7)];
        height = _0x1865fd[_0x518120(0xd8)];
        $(window)[_0x518120(0xd9)](function () {
            var _0x422918 = _0x518120;
            width = _0x1865fd['clientWidth'];
            height = _0x1865fd[_0x422918(0xd8)];
        });
        _0x1865fd[_0x518120(0x7b)](_0x518120(0xce), _0x35686f => {
            var _0x739250 = _0x518120;
            mouseX = _0x35686f[_0x739250(0xda)];
            mouseY = _0x35686f[_0x739250(0xdb)];
        });
    }
    if (_0x4eb2a9 == '1' && myPlayer['id'] == null) {
        myPlayer['id'] = _0x14ee7e[0x1];
    }
    var _0x59528f = '!';
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id']) {
        let _0x25a8bd = _0x14ee7e[0x2][_0x518120(0xdc)]('\x20')[0x1];
        if (_0x14ee7e[0x2]['split']('\x20')[0x0] == _0x59528f + _0x518120(0xdd)) {
            doNewSend([
                '9',
                [null]
            ]);
            setTimeout(() => {
                doNewSend([
                    '8',
                    [_0x25a8bd]
                ]);
            }, 0x258);
            setTimeout(() => {
                doNewSend([
                    '10',
                    [_0x25a8bd]
                ]);
            }, 0x4b0);
            setTimeout(() => {
                doNewSend([
                    'ch',
                    ['Made\x20Clan\x20[' + _0x25a8bd + ']']
                ]);
            }, 0x708);
        }
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id']) {
        let _0xddbf5 = _0x14ee7e[0x2][_0x518120(0xdc)]('\x20')[0x1];
        if (_0x14ee7e[0x2][_0x518120(0xdc)]('\x20')[0x0] == _0x59528f + 'is') {
            instaspeedd = _0xddbf5;
            setTimeout(() => {
                var _0x5437af = _0x518120;
                ch(_0x5437af(0xde) + instaspeedd + ']');
            }, 0x258);
        }
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2]['split']('\x20')[0x0] == _0x59528f + _0x518120(0xdf)) {
        let _0x452af3 = _0x14ee7e[0x2][_0x518120(0xdc)]('\x20')[0x1];
        hat(_0x452af3);
        setTimeout(() => {
            doNewSend([
                'ch',
                ['Hat\x20Buyed\x20hat(' + _0x452af3 + ')']
            ]);
        }, 0x44c);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2][_0x518120(0xdc)]('\x20')[0x0] == _0x59528f + _0x518120(0xe0)) {
        let _0xfe946b = _0x14ee7e[0x2][_0x518120(0xdc)]('\x20')[0x1];
        acc(_0xfe946b);
        setTimeout(() => {
            var _0xff5fac = _0x518120;
            doNewSend([
                'ch',
                [_0xff5fac(0xe1) + _0xfe946b + ')']
            ]);
        }, 0x44c);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2] == _0x518120(0xe2)) {
        if (lmao == 0x10) {
            setTimeout(() => {
                ch('Apple');
            }, 0x258);
        } else if (lmao == 0x11) {
            setTimeout(() => {
                var _0x27eda8 = _0x518120;
                ch(_0x27eda8(0xe3));
            }, 0x258);
        } else if (lmao == 0x12) {
            setTimeout(() => {
                var _0x5d0e98 = _0x518120;
                ch(_0x5d0e98(0xe4));
            }, 0x258);
        }
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2] == _0x59528f + _0x518120(0xe5)) {
        autoaim = !![];
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2] == _0x59528f + _0x518120(0xe6)) {
        autoaim = ![];
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2][_0x518120(0xdc)]('\x20') == _0x59528f + 'pb') {
        doNewSend([
            '6',
            [0x5]
        ]);
        doNewSend([
            '6',
            [0x11]
        ]);
        doNewSend([
            '6',
            [0x1f]
        ]);
        doNewSend([
            '6',
            [0x17]
        ]);
        doNewSend([
            '6',
            [0x9]
        ]);
        doNewSend([
            '6',
            [0x21]
        ]);
        setTimeout(() => {
            var _0x27a872 = _0x518120;
            doNewSend([
                'ch',
                [_0x27a872(0xe7)]
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2][_0x518120(0xdc)]('\x20') == _0x59528f + 'pm') {
        doNewSend([
            '6',
            [0x5]
        ]);
        doNewSend([
            '6',
            [0x11]
        ]);
        doNewSend([
            '6',
            [0x1f]
        ]);
        doNewSend([
            '6',
            [0x17]
        ]);
        doNewSend([
            '6',
            [0x9]
        ]);
        doNewSend([
            '6',
            [0x21]
        ]);
        doNewSend([
            '6',
            [0x1c]
        ]);
        doNewSend([
            '6',
            [0xf]
        ]);
        setTimeout(() => {
            var _0x4b0307 = _0x518120;
            doNewSend([
                'ch',
                [_0x4b0307(0xe8)]
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2][_0x518120(0xdc)]('\x20') == _0x59528f + _0x518120(0xe9)) {
        doNewSend([
            '6',
            [0x1c]
        ]);
        setTimeout(() => {
            doNewSend([
                'ch',
                ['Mill\x20proe']
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2]['split']('\x20') == _0x59528f + 'km') {
        doNewSend([
            '6',
            [0x3]
        ]);
        doNewSend([
            '6',
            [0x11]
        ]);
        doNewSend([
            '6',
            [0x1f]
        ]);
        doNewSend([
            '6',
            [0x17]
        ]);
        doNewSend([
            '6',
            [0x9]
        ]);
        doNewSend([
            '6',
            [0x21]
        ]);
        doNewSend([
            '6',
            [0x4]
        ]);
        doNewSend([
            '6',
            [0xf]
        ]);
        setTimeout(() => {
            doNewSend([
                'ch',
                ['KaTana+Musket\x20The\x20Best\x20combo!']
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2][_0x518120(0xdc)]('\x20') == _0x59528f + 'kh') {
        doNewSend([
            '6',
            [0x3]
        ]);
        doNewSend([
            '6',
            [0x11]
        ]);
        doNewSend([
            '6',
            [0x1f]
        ]);
        doNewSend([
            '6',
            [0x1b]
        ]);
        doNewSend([
            '6',
            [0xa]
        ]);
        doNewSend([
            '6',
            [0x25]
        ]);
        doNewSend([
            '6',
            [0x4]
        ]);
        doNewSend([
            '6',
            [0x19]
        ]);
        setTimeout(() => {
            var _0x442f47 = _0x518120;
            doNewSend([
                'ch',
                [_0x442f47(0xea)]
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2][_0x518120(0xdc)]('\x20') == _0x59528f + 'dp') {
        doNewSend([
            '6',
            [0x7]
        ]);
        doNewSend([
            '6',
            [0x11]
        ]);
        doNewSend([
            '6',
            [0x1f]
        ]);
        doNewSend([
            '6',
            [0x17]
        ]);
        doNewSend([
            '6',
            [0xa]
        ]);
        doNewSend([
            '6',
            [0x21]
        ]);
        doNewSend([
            '6',
            [0x1c]
        ]);
        doNewSend([
            '6',
            [0x19]
        ]);
        setTimeout(() => {
            doNewSend([
                'ch',
                ['dagger+powerMill']
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2][_0x518120(0xdc)]('\x20') == _0x59528f + 'sh') {
        doNewSend([
            '6',
            [0x8]
        ]);
        doNewSend([
            '6',
            [0x11]
        ]);
        doNewSend([
            '6',
            [0x1f]
        ]);
        doNewSend([
            '6',
            [0x17]
        ]);
        doNewSend([
            '6',
            [0xa]
        ]);
        doNewSend([
            '6',
            [0x21]
        ]);
        doNewSend([
            '6',
            [0x1c]
        ]);
        doNewSend([
            '6',
            [0x19]
        ]);
        setTimeout(() => {
            var _0x3fe9f4 = _0x518120;
            doNewSend([
                'ch',
                [_0x3fe9f4(0xeb)]
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2][_0x518120(0xdc)]('\x20') == _0x59528f + 'gb') {
        doNewSend([
            '6',
            [0x1]
        ]);
        doNewSend([
            '6',
            [0x11]
        ]);
        doNewSend([
            '6',
            [0x1f]
        ]);
        doNewSend([
            '6',
            [0x17]
        ]);
        doNewSend([
            '6',
            [0x9]
        ]);
        doNewSend([
            '6',
            [0x21]
        ]);
        doNewSend([
            '6',
            [0x2]
        ]);
        doNewSend([
            '6',
            [0xd]
        ]);
        setTimeout(() => {
            var _0x372d0f = _0x518120;
            doNewSend([
                'ch',
                [_0x372d0f(0xec)]
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2]['split']('\x20') == _0x59528f + 'gm') {
        doNewSend([
            '6',
            [0x1]
        ]);
        doNewSend([
            '6',
            [0x11]
        ]);
        doNewSend([
            '6',
            [0x1f]
        ]);
        doNewSend([
            '6',
            [0x17]
        ]);
        doNewSend([
            '6',
            [0x9]
        ]);
        doNewSend([
            '6',
            [0x21]
        ]);
        doNewSend([
            '6',
            [0x2]
        ]);
        doNewSend([
            '6',
            [0xf]
        ]);
        setTimeout(() => {
            doNewSend([
                'ch',
                ['great\x20axe+\x20Musket']
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2][_0x518120(0xdc)]('\x20') == _0x59528f + _0x518120(0xed)) {
        doNewSend([
            '6',
            [0x3]
        ]);
        doNewSend([
            '6',
            [0x11]
        ]);
        doNewSend([
            '6',
            [0x1f]
        ]);
        doNewSend([
            '6',
            [0x1b]
        ]);
        doNewSend([
            '6',
            [0xa]
        ]);
        doNewSend([
            '6',
            [0x25]
        ]);
        doNewSend([
            '6',
            [0x4]
        ]);
        doNewSend([
            '6',
            [0x24]
        ]);
        setTimeout(() => {
            var _0x32a594 = _0x518120;
            doNewSend([
                'ch',
                [_0x32a594(0xee)]
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2]['split']('\x20') == _0x59528f + 'rb') {
        doNewSend([
            '6',
            [0xd]
        ]);
        setTimeout(() => {
            doNewSend([
                'ch',
                ['Bow\x20spam\x20yeh']
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2][_0x518120(0xdc)]('\x20') == _0x59528f + _0x518120(0xef)) {
        doNewSend([
            '6',
            [0x1c]
        ]);
        doNewSend([
            '6',
            [0x19]
        ]);
        setTimeout(() => {
            var _0x5ec08f = _0x518120;
            doNewSend([
                'ch',
                [_0x5ec08f(0xef)]
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2]['split']('\x20') == _0x59528f + _0x518120(0xf0)) {
        doNewSend([
            '6',
            [0x4]
        ]);
        setTimeout(() => {
            var _0x5271ce = _0x518120;
            doNewSend([
                'ch',
                [_0x5271ce(0xf1)]
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2][_0x518120(0xdc)]('\x20') == _0x59528f + _0x518120(0xf2)) {
        doNewSend([
            '6',
            [0x2]
        ]);
        setTimeout(() => {
            var _0x236c6d = _0x518120;
            doNewSend([
                'ch',
                [_0x236c6d(0xf3)]
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2]['split']('\x20') == _0x59528f + 'pp') {
        setTimeout(() => {
            var _0x35f837 = _0x518120;
            doNewSend([
                'ch',
                [_0x35f837(0xf4) + Random(0x0, 0xc) + '\x20Inch\x20Long\x20PP']
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && myPlayer['id']) {
        if (_0x14ee7e[0x2][_0x518120(0xdc)]('\x20')[0x0] == _0x59528f + _0x518120(0xf5) && myPlayer['id']) {
            cps = _0x14ee7e[0x2][_0x518120(0xdc)]('\x20')[0x1];
            setTimeout(() => {
                var _0x288a3a = _0x518120;
                doNewSend([
                    'ch',
                    [_0x288a3a(0xf6) + cps + ',' + cps2 + 'x]']
                ]);
            }, 0x258);
        }
    }
    if (_0x14ee7e[0x0] == 'ch' && myPlayer['id']) {
        if (_0x14ee7e[0x2][_0x518120(0xdc)]('\x20')[0x0] == _0x59528f + _0x518120(0xf7) && myPlayer['id']) {
            cps2 = _0x14ee7e[0x2][_0x518120(0xdc)]('\x20')[0x1];
            setTimeout(() => {
                var _0x18a1af = _0x518120;
                doNewSend([
                    'ch',
                    [_0x18a1af(0xf6) + cps + ',' + cps2 + 'x]']
                ]);
            }, 0x258);
        }
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2][_0x518120(0xdc)]('\x20')[0x0] == _0x59528f + _0x518120(0xf8)) {
        setTimeout(() => {
            var _0x460439 = _0x518120;
            doNewSend([
                'ch',
                [_0x460439(0xf9)]
            ]);
            doNewSend([
                '9',
                [null]
            ]);
        }, 0x1f4);
    }
    if (_0x14ee7e[0x0] == 'ch' && _0x14ee7e[0x1] == myPlayer['id'] && _0x14ee7e[0x2][_0x518120(0xdc)]('\x20')[0x0] == _0x59528f + _0x518120(0xfa)) {
        setTimeout(() => {
            crashing = !![];
        }, 0x1f4);
    }
    if (_0x4eb2a9 == '33') {
        enemiesNear = [];
        for (let _0x566f68 = 0x0; _0x566f68 < _0x14ee7e[0x1]['length'] / 0xd; _0x566f68++) {
            let _0x4cc735 = _0x14ee7e[0x1]['slice'](0xd * _0x566f68, 0xd * _0x566f68 + 0xd);
            if (_0x4cc735[0x0] == myPlayer['id']) {
                prevX = myPlayer['x'];
                prevY = myPlayer['y'];
                myPlayer['x'] = _0x4cc735[0x1];
                myPlayer['y'] = _0x4cc735[0x2];
                myPlayer[_0x518120(0xc6)] = _0x4cc735[0x3];
                myPlayer[_0x518120(0xfb)] = _0x4cc735[0x4];
                myPlayer[_0x518120(0xfc)] = _0x4cc735[0x5];
                myPlayer[_0x518120(0xdd)] = _0x4cc735[0x7];
                myPlayer[_0x518120(0xfd)] = _0x4cc735[0x8];
                myPlayer['hat'] = _0x4cc735[0x9];
                myPlayer[_0x518120(0xfe)] = _0x4cc735[0xa];
                myPlayer['isSkull'] = _0x4cc735[0xb];
                direcxy = Math['atan2'](myPlayer['y'] - prevY, myPlayer['x'] - prevX);
            } else if (_0x4cc735[0x7] != myPlayer[_0x518120(0xdd)] || _0x4cc735[0x7] === null) {
                enemiesNear[_0x518120(0xff)](_0x4cc735);
            }
        }
    }
    if (_0x4eb2a9 == '6') {
        let _0x219ada = {
            'count': null,
            'x': null,
            'y': null,
            'dir': null,
            'type': null,
            'owner': null,
            'dir': null
        };
        var _0x38b545 = [];
        for (let _0x396805 = 0x0; _0x396805 < _0x14ee7e[0x1][_0x518120(0x6f)] / 0x8; _0x396805++) {
            let _0x36058d = _0x14ee7e[0x1][_0x518120(0x100)](0x8 * _0x396805, 0x8 * _0x396805 + 0x8);
            _0x219ada['count'] = _0x36058d[0x0];
            _0x219ada['x'] = _0x36058d[0x1];
            _0x219ada['y'] = _0x36058d[0x2];
            _0x219ada[_0x518120(0x101)] = _0x36058d[0x4];
            _0x219ada[_0x518120(0xa6)] = _0x36058d[0x6];
            _0x219ada[_0x518120(0x102)] = _0x36058d[0x7];
            _0x219ada[_0x518120(0xc6)] = Math['atan2'](_0x219ada['y'] - myPlayer['y'], _0x219ada['x'] - myPlayer['x']);
            if (objects[_0x518120(0x103)](_0x219ada) == -0x1) {
                objects[_0x518120(0xff)](_0x219ada);
            }
            if (_0x219ada[_0x518120(0xa6)] == 0xf != myPlayer['id'] || _0x219ada[_0x518120(0xa6)] == '15' != myPlayer['id']) {
                _0x38b545[_0x518120(0xff)](_0x219ada);
            }
            if (_0x36058d[0x6] == 0xf && _0x36058d[0x7] != myPlayer['id']) {
                if (Math['sqrt'](Math[_0x518120(0x104)](myPlayer['y'] - _0x36058d[0x2], 0x2) + Math[_0x518120(0x104)](myPlayer['x'] - _0x36058d[0x1], 0x2)) < 0x5a) {
                    nearestTrap = _0x38b545['sort']((_0x12ac4f, _0x416e6a) => distance(_0x12ac4f['x'], _0x12ac4f['y'], myPlayer['x'], myPlayer['y']) - distance(_0x416e6a['x'], _0x416e6a['y'], myPlayer['x'], myPlayer['y']))[0x0];
                    nearestTrapAngle = Math[_0x518120(0xc4)](nearestTrap['y'] - myPlayer['y'], nearestTrap['x'] - myPlayer['x']);
                    for (let _0x31fde7 = 0x0; _0x31fde7 < 0x24; _0x31fde7++) {
                        let _0x5b2c5b = myPlayer['dir'] + toRad(_0x31fde7 * 0xa);
                        place(spikeType, _0x5b2c5b);
                        place(boostType, _0x5b2c5b);
                    }
                    if (autobreak == !![]) {
                        doNewSend([
                            'ch',
                            ['Trap\x20Found\x20[\x20=\x20' + toDeg(nearestTrapAngle) + ']']
                        ]);
                        doNewSend([
                            _0x518120(0xb2),
                            [
                                0x0,
                                0x28,
                                0x0
                            ]
                        ]);
                        doNewSend([
                            'c',
                            [
                                0x1,
                                null
                            ]
                        ]);
                        doNewSend([
                            '2',
                            [nearestTrapAngle]
                        ]);
                    }
                    var _0x9793eb = {};
                    _0x9793eb['hat'] = myPlayer[_0x518120(0xdf)];
                    var _0x11abf0 = setInterval(() => {
                        doNewSend([
                            '2',
                            [nearestTrapAngle]
                        ]);
                    });
                    var _0x46bbd7 = setInterval(() => {
                        var _0x491638 = _0x518120;
                        if (Math['sqrt'](Math[_0x491638(0x104)](myPlayer['y'] - _0x36058d[0x2], 0x2) + Math['pow'](myPlayer['x'] - _0x36058d[0x1], 0x2)) < 0x32) {
                            if (autobreak == !![]) {
                                doNewSend([
                                    _0x491638(0xb2),
                                    [
                                        0x0,
                                        0x28,
                                        0x0
                                    ]
                                ]);
                                doNewSend([
                                    '2',
                                    [nearestTrapAngle]
                                ]);
                                doNewSend([
                                    'c',
                                    [
                                        0x1,
                                        null
                                    ]
                                ]);
                            }
                            setTimeout(() => {
                                hat(0x6);
                            }, 0x14);
                        } else {
                            clearInterval(_0x46bbd7);
                            clearInterval(_0x11abf0);
                            doNewSend([
                                _0x491638(0xb2),
                                [
                                    0x0,
                                    _0x9793eb['hat'],
                                    0x0
                                ]
                            ]);
                            doNewSend([
                                'ch',
                                ['AutoBreaker:\x20Destroyed']
                            ]);
                            doNewSend([
                                'c',
                                [
                                    0x0,
                                    null
                                ]
                            ]);
                            for (let _0x431903 = 0x0; _0x431903 < 0x24; _0x431903++) {
                                let _0x557899 = myPlayer[_0x491638(0xc6)] + toRad(_0x431903 * 0xa);
                                place(boostType, _0x557899);
                                place(spikeType, _0x557899);
                            }
                        }
                    }, 0x96);
                }
            }
        }
    }
    isEnemyNear = ![];
    if (enemiesNear) {
        nearestEnemy = enemiesNear['sort']((_0x226dd3, _0x32e241) => dist(_0x226dd3, myPlayer) - dist(_0x32e241, myPlayer))[0x0];
    }
    if (nearestEnemy) {
        nearestEnemyAngle = Math[_0x518120(0xc4)](nearestEnemy[0x2] - myPlayer['y'], nearestEnemy[0x1] - myPlayer['x']);
        if (Math['sqrt'](Math[_0x518120(0x104)](myPlayer['y'] - nearestEnemy[0x2], 0x2) + Math[_0x518120(0x104)](myPlayer['x'] - nearestEnemy[0x1], 0x2)) < 0xfa) {
            isEnemyNear = !![];
            if (autoaim == ![] && myPlayer[_0x518120(0xdf)] != 0x7 && myPlayer['hat'] != 0x35) {
                normalHat = 0x6;
                if (primary != 0x8) {
                    normalAcc = 0x15;
                }
            }
            ;
        }
    }
    if (isEnemyNear == ![] && autoaim == ![]) {
        normalAcc = 0xb;
        if (myPlayer['y'] < 0x960) {
            normalHat = 0xf;
        } else if (myPlayer['y'] > 0x1ac2 && myPlayer['y'] < 0x1d7e) {
            normalHat = 0x1f;
        } else {
            normalHat = 0xc;
        }
    }
    if (!nearestEnemy) {
        nearestEnemyAngle = myPlayer[_0x518120(0xc6)];
    }
    if (_0x14ee7e[0x0] == '7' && _0x14ee7e[0x1] != myPlayer['id']) {
        if (dadd == !![]) {
            if (nearestEnemy[0x9] == '7') {
                doNewSend([
                    'ch',
                    [_0x518120(0x105)]
                ]);
                if (AntiBull == !![]) {
                    hat(0xb);
                } else {
                    hat(0x6);
                }
                acc(0x15);
            }
            if (nearestEnemy[0x9] == '53') {
                doNewSend([
                    'ch',
                    ['TurretGear\x20Detected']
                ]);
                hat(0x16);
                acc(0x15);
            }
            if (nearestEnemy[0x9] == '11') {
                doNewSend([
                    'ch',
                    ['SpikeGear\x20Detected']
                ]);
                hat(0x6);
                acc(0x12);
            }
        }
        if (AntiBull == 0x1) {
            if (nearestEnemy[0x9] != '6') {
                if (myPlayer[_0x518120(0xdf)] == 0xb) {
                    if (Math[_0x518120(0x106)](Math[_0x518120(0x104)](myPlayer['y'] - nearestEnemy[0x2], 0x2) + Math['pow'](myPlayer['x'] - nearestEnemy[0x1], 0x2)) < 0xdc) {
                        autoaim = !![];
                        hat(0x7);
                        doNewSend([
                            '5',
                            [
                                primary,
                                !![]
                            ]
                        ]);
                        doNewSend([
                            'c',
                            [0x1]
                        ]);
                        setTimeout(() => {
                            var _0x19d72c = _0x518120;
                            place(spikeType, myPlayer['dir'] + toRad(0x2d));
                            place(spikeType, myPlayer[_0x19d72c(0xc6)] + toRad(0x13b));
                        }, 0x78);
                        setTimeout(() => {
                            var _0x1919ea = _0x518120;
                            place(foodType, 0x9ff5a2ca93deb8000000000000000000000000000000000000000000000);
                            ch(_0x1919ea(0x107));
                            autoaim = ![];
                            hat(0xb);
                            doNewSend([
                                'c',
                                [
                                    0x0,
                                    null
                                ]
                            ]);
                        }, 0xc8);
                    }
                }
            }
        }
        if (dadd == !![]) {
            if (Math[_0x518120(0x106)](Math[_0x518120(0x104)](myPlayer['y'] - nearestEnemy[0x2], 0x2) + Math['pow'](myPlayer['x'] - nearestEnemy[0x1], 0x2)) < 0x1f4) {
                if (nearestEnemy[0x5] == '5') {
                    doNewSend([
                        'ch',
                        [_0x518120(0x108)]
                    ]);
                }
                if (nearestEnemy[0x5] == '4') {
                    doNewSend([
                        'ch',
                        ['Katana\x20Detected!!']
                    ]);
                }
                if (nearestEnemy[0x5] == '15') {
                    doNewSend([
                        'ch',
                        [_0x518120(0x109)]
                    ]);
                }
                if (nearestEnemy[0x5] == '0') {
                    doNewSend([
                        'ch',
                        [_0x518120(0x10a)]
                    ]);
                }
                if (nearestEnemy[0x5] == '11') {
                    doNewSend([
                        'ch',
                        [_0x518120(0x10b)]
                    ]);
                }
            }
        }
    }
    if (_0x4eb2a9 == 'h' && _0x14ee7e[0x1] == myPlayer['id']) {
        if (lmao == 0x10) {
            if (_0x14ee7e[0x2] < 0x60 && _0x14ee7e[0x2] > test && healToggle == 0x1) {
                setTimeout(() => {
                    placeq(foodType, null);
                    placeq(foodType, null);
                }, 0x78);
            }
        } else if (lmao == 0x11) {
            if (_0x14ee7e[0x2] < 0x60 && _0x14ee7e[0x2] > test && healToggle == 0x1) {
                setTimeout(() => {
                    placeq(foodType, null);
                }, 0x78);
            }
        }
        if (_0x14ee7e[0x2] < 0x39 && _0x14ee7e[0x2] > 0x0 && AntiInsta == 0x0 && healToggle == 0x1) {
            placeq(foodType, null);
        }
        if (_0x14ee7e[0x2] < 0x3c && _0x14ee7e[0x2] > 0x0 && AntiInsta == 0x1) {
            placeq(foodType);
            placeq(foodType);
            hat(0x16);
            setTimeout(() => {
                placeq(foodType);
                hat(0xd);
                acc(0x11);
            }, 0x32);
            setTimeout(() => {
                hat(0x7);
                placeq(foodType);
                placeq(foodType);
                ccat = ccat + 0x1;
            }, 0x96);
            setTimeout(() => {
                var _0x4aae3c = _0x518120;
                hat(0xd);
                acc(0xd);
                ch(_0x4aae3c(0x10c) + ccat + _0x4aae3c(0x10d));
            }, 0x1f4);
            setTimeout(() => {
                hat(0x7);
                acc(0xd);
            }, 0x3e8);
        }
        if (_0x14ee7e[0x2] < 0x64 && _0x14ee7e[0x2] > 0x0 && myPlayer[_0x518120(0xdf)] == 0x7 && AntiInsta == 0x1) {
            setTimeout(() => {
                var _0x9b6752 = _0x518120;
                hat(0x6);
                ch(_0x9b6752(0x10e));
            }, 0x7d0);
        }
    }
    if (_0x4eb2a9 == 'h' && _0x14ee7e[0x1] == myPlayer['id']) {
        if (_0x14ee7e[0x2] < 0x64 && _0x14ee7e[0x2] > 0x0 && ihealToggle == 0x1) {
            setTimeout(() => {
                placei(foodType, null);
            }, 0x10e);
        }
    }
    update();
}
(function () {
    var _0x487093 = _0x55a115;
    var _0x1c5eab;
    var _0x7e684f;
    var _0x2fa7a4 = !![];
    var _0x574600 = 0x0;
    document[_0x487093(0x7b)]('keydown', function (_0x2312f9) {
        var _0x4cc2ae = _0x487093;
        if (_0x2312f9[_0x4cc2ae(0xad)] == 0xbe && document[_0x4cc2ae(0xae)]['id']['toLowerCase']() !== _0x4cc2ae(0xb0)) {
            _0x574600 = (_0x574600 + 0x1) % 0x2;
            if (_0x574600 == 0x0) {
                doNewSend([
                    'ch',
                    [_0x4cc2ae(0x10f)]
                ]);
            } else {
                doNewSend([
                    'ch',
                    [_0x4cc2ae(0x110)]
                ]);
            }
            _0x2312f9['preventDefault']();
            if (_0x2fa7a4) {
                _0x7e684f = setTimeout(function () {
                    _0xafb2a();
                }, 0x0);
            } else {
                clearTimeout(_0x7e684f);
            }
            _0x1c5eab = myPlayer[_0x4cc2ae(0xc6)];
            _0x2fa7a4 = !_0x2fa7a4;
        }
    });
    function _0xafb2a() {
        clearTimeout(_0x7e684f);
        tripleMill();
        _0x7e684f = setTimeout(function () {
            _0xafb2a();
        }, 0x32);
    }
}());
function distance(_0x22f1b7, _0xfd4cba, _0x564f19, _0xea2b2d) {
    var _0x4b1451 = _0x55a115;
    return Math[_0x4b1451(0x106)](Math[_0x4b1451(0x104)](_0xfd4cba - _0xea2b2d, 0x2) + Math[_0x4b1451(0x104)](_0x22f1b7 - _0x564f19, 0x2));
}
function createTribe(_0x41d670) {
    leaveTribe();
    doNewSend([
        '8',
        [_0x41d670]
    ]);
}
function leaveTribe() {
    doNewSend([
        '9',
        [null]
    ]);
}
function fourSpawnpad() {
    var _0x36611c = _0x55a115;
    place(spawnpadType, myPlayer[_0x36611c(0xc6)] + toRad(0x87));
    place(spawnpadType, myPlayer[_0x36611c(0xc6)] + toRad(0xb4));
    place(spawnpadType, myPlayer[_0x36611c(0xc6)] + toRad(0xf0));
    place(spawnpadType, myPlayer['dir'] + toRad(0x12c));
    place(spawnpadType, myPlayer[_0x36611c(0xc6)] + toRad(0x168));
}
function doNewSend(_0x548e8b) {
    var _0x451036 = _0x55a115;
    ws[_0x451036(0xd5)](new Uint8Array(Array[_0x451036(0x111)](msgpack5[_0x451036(0x112)](_0x548e8b))));
}
function acc(_0x3b8349) {
    var _0x5a7969 = _0x55a115;
    doNewSend([
        _0x5a7969(0xb2),
        [
            0x0,
            _0x3b8349,
            0x1
        ]
    ]);
    doNewSend([
        _0x5a7969(0xb2),
        [
            0x1,
            _0x3b8349,
            0x1
        ]
    ]);
}
function hat(_0x307b72) {
    var _0x29df90 = _0x55a115;
    storeBuy(_0x307b72);
    doNewSend([
        _0x29df90(0xb2),
        [
            0x0,
            _0x307b72,
            0x0
        ]
    ]);
}
function placei(_0xeb47c2, _0x3aee49 = Math[_0x55a115(0xc4)](mouseY - height / 0x2, mouseX - width / 0x2)) {
    var _0x5a3524 = _0x55a115;
    hat(0x0);
    doNewSend([
        '5',
        [
            _0xeb47c2,
            null
        ]
    ]);
    doNewSend([
        'c',
        [
            0x1,
            _0x3aee49
        ]
    ]);
    doNewSend([
        'c',
        [
            0x0,
            _0x3aee49
        ]
    ]);
    hat(0x38);
    hat(0x0);
    doNewSend([
        '5',
        [
            _0xeb47c2,
            null
        ]
    ]);
    doNewSend([
        'c',
        [
            0x1,
            _0x3aee49
        ]
    ]);
    doNewSend([
        'c',
        [
            0x0,
            _0x3aee49
        ]
    ]);
    hat(0x38);
    doNewSend([
        '5',
        [
            myPlayer[_0x5a3524(0xfc)],
            !![]
        ]
    ]);
}
function place(_0x4ede31, _0x1e8bc8 = Math['atan2'](mouseY - height / 0x2, mouseX - width / 0x2)) {
    var _0xc6c87c = _0x55a115;
    for (let _0xabb2ac = 0x0; _0xabb2ac < cps; _0xabb2ac++) {
        doNewSend([
            '5',
            [
                _0x4ede31,
                null
            ]
        ]);
        doNewSend([
            'c',
            [
                0x1,
                _0x1e8bc8
            ]
        ]);
        doNewSend([
            'c',
            [
                0x0,
                _0x1e8bc8
            ]
        ]);
        doNewSend([
            '5',
            [
                myPlayer[_0xc6c87c(0xfc)],
                !![]
            ]
        ]);
    }
}
function placeq(_0x5d6bd5, _0xd7a30a = Math['atan2'](mouseY - height / 0x2, mouseX - width / 0x2)) {
    var _0x5aa218 = _0x55a115;
    doNewSend([
        '5',
        [
            _0x5d6bd5,
            null
        ]
    ]);
    doNewSend([
        'c',
        [
            0x1,
            _0xd7a30a
        ]
    ]);
    doNewSend([
        'c',
        [
            0x0,
            _0xd7a30a
        ]
    ]);
    doNewSend([
        '5',
        [
            myPlayer[_0x5aa218(0xfc)],
            !![]
        ]
    ]);
}
function placebug(_0x15119b, _0x4f8cd7 = Math[_0x55a115(0xc4)](mouseY - height / 0x2, mouseX - width / 0x2)) {
    doNewSend([
        'c',
        [
            0x1,
            0x27b46536c66c8e0000000
        ]
    ]);
    doNewSend([
        'c',
        [
            0x0,
            null
        ]
    ]);
}
function mill() {
    place(millType);
}
function toDeg(_0x5603d8) {
    var _0x557f81 = Math['PI'];
    return _0x5603d8 * (0xb4 / _0x557f81);
}
function tripleMill() {
    place(millType, direcxy + toRad(frozen + 0x6c));
    place(millType, direcxy + toRad(frozen + 0xb4));
    place(millType, direcxy + toRad(frozen + 0xfc));
}
function boostSpike() {
    if (boostDir == null) {
        boostDir = nearestEnemyAngle;
        doNewSend([
            '33',
            [boostDir]
        ]);
    }
    place(boostType, boostDir);
    setTimeout(() => {
        var _0x4d2e61 = _0x27ea;
        place(boostType, Math['atan2'](mouseY - height / 0x2, mouseX - width / 0x2) + toRad(0x0));
        place(spikeType, Math[_0x4d2e61(0xc4)](mouseY - height / 0x2, mouseX - width / 0x2) + toRad(0x5a));
        place(spikeType, Math[_0x4d2e61(0xc4)](mouseY - height / 0x2, mouseX - width / 0x2) + toRad(0x10e));
        doNewSend([
            '33',
            [boostDir]
        ]);
    }, 0x1f4);
    setTimeout(() => {
        var _0x1bf1ff = _0x27ea;
        place(spikeType, Math[_0x1bf1ff(0xc4)](mouseY - height / 0x2, mouseX - width / 0x2) + toRad(0xb4));
    }, 0x2bc);
}
var dash = function (_0x4d9358, _0x49fbf5, _0x542854) {
    let _0x4ffcef = ![];
    let _0x3334e2 = undefined;
    return {
        'start'(_0x57f37b) {
            var _0xcce5b0 = _0x27ea;
            if (_0x57f37b == _0x4d9358 && document['activeElement']['id'][_0xcce5b0(0xaf)]() !== _0xcce5b0(0xb0)) {
                _0x4ffcef = !![];
                if (_0x3334e2 === undefined) {
                    _0x3334e2 = setInterval(() => {
                        var _0x42ccb6 = _0xcce5b0;
                        for (let _0x4d9416 = 0x0; _0x4d9416 < 0x64; _0x4d9416++) {
                            _0x49fbf5();
                        }
                        if (!_0x4ffcef) {
                            clearInterval(_0x3334e2);
                            _0x3334e2 = undefined;
                            console[_0x42ccb6(0x6a)](_0x42ccb6(0x113));
                        }
                    }, _0x542854);
                }
            }
        },
        'stop'(_0x1ac8f9) {
            var _0x454e3b = _0x27ea;
            if (_0x1ac8f9 == _0x4d9358 && document['activeElement']['id'][_0x454e3b(0xaf)]() !== _0x454e3b(0xb0)) {
                _0x4ffcef = ![];
            }
        }
    };
};
var repeater = function (_0x1c297d, _0x351e1c, _0x55f128) {
    let _0xc67a0e = ![];
    let _0x488c8c = undefined;
    return {
        'start'(_0x10c0dd) {
            var _0x2da346 = _0x27ea;
            if (_0x10c0dd == _0x1c297d && document['activeElement']['id']['toLowerCase']() !== _0x2da346(0xb0)) {
                _0xc67a0e = !![];
                if (_0x488c8c === undefined) {
                    _0x488c8c = setInterval(() => {
                        var _0x5e4b5a = _0x2da346;
                        for (let _0x8dd1f6 = 0x0; _0x8dd1f6 < cps2; _0x8dd1f6++) {
                            _0x351e1c();
                        }
                        if (!_0xc67a0e) {
                            clearInterval(_0x488c8c);
                            _0x488c8c = undefined;
                            console[_0x5e4b5a(0x6a)](_0x5e4b5a(0x113));
                        }
                    }, _0x55f128);
                }
            }
        },
        'stop'(_0x18f120) {
            var _0xf9e31d = _0x27ea;
            if (_0x18f120 == _0x1c297d && document[_0xf9e31d(0xae)]['id'][_0xf9e31d(0xaf)]() !== 'chatbox') {
                _0xc67a0e = ![];
            }
        }
    };
};
const dashing = dash(0xbb, () => {
    tripleMill();
}, 0x0);
const healer = repeater(0x51, () => {
    placeq(foodType);
}, 0x0);
const boostPlacer = repeater(0x46, () => {
    place(boostType);
}, 0x0);
const spikePlacer = repeater(0x56, () => {
    place(spikeType);
}, 0x0);
const millPlacer = repeater(0x4e, () => {
    tripleMill();
}, 0x0);
const turretPlacer = repeater(0x48, () => {
    place(turretType);
}, 0x0);
const boostSpiker = repeater(0x47, boostSpike, 0x0);
const fourSpawnpader = repeater(0xdc, fourSpawnpad, 0x0);
document[_0x55a115(0x7b)](_0x55a115(0xc1), _0xb67180 => {
    var _0x14a658 = _0x55a115;
    dashing['start'](_0xb67180[_0x14a658(0xad)]);
    spikePlacer[_0x14a658(0x114)](_0xb67180[_0x14a658(0xad)]);
    healer[_0x14a658(0x114)](_0xb67180[_0x14a658(0xad)]);
    boostPlacer['start'](_0xb67180['keyCode']);
    boostSpiker[_0x14a658(0x114)](_0xb67180['keyCode']);
    millPlacer[_0x14a658(0x114)](_0xb67180[_0x14a658(0xad)]);
    turretPlacer['start'](_0xb67180[_0x14a658(0xad)]);
    fourSpawnpader[_0x14a658(0x114)](_0xb67180[_0x14a658(0xad)]);
    if (_0xb67180[_0x14a658(0xad)] == 0xbb && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== _0x14a658(0xb0)) {
        ch('dashed');
        setTimeout(() => {
            doNewSend([
                '5',
                [
                    primary,
                    !![]
                ]
            ]);
        }, 0xa);
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x0 && document[_0x14a658(0xae)]['id']['toLowerCase']() !== _0x14a658(0xb0)) {
        for (let _0x35777a = 0x0; _0x35777a < 0x5; _0x35777a++) {
            let _0x261354 = myPlayer[_0x14a658(0xc6)] + toRad(_0x35777a * 0x48);
            place(millType, _0x261354);
        }
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x0 && document[_0x14a658(0xae)]['id']['toLowerCase']() !== _0x14a658(0xb0)) {
        for (let _0x38584a = 0x0; _0x38584a < 0x4; _0x38584a++) {
            let _0x55afbc = myPlayer[_0x14a658(0xc6)] + toRad(_0x38584a * 0x5a);
            place(wallType, _0x55afbc);
        }
    }
    if (_0xb67180['keyCode'] == 0x23 && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== _0x14a658(0xb0)) {
        doNewSend([
            '5',
            [
                'constructor',
                !![]
            ]
        ]);
        doNewSend([
            '9',
            [null]
        ]);
        doNewSend([
            '8',
            [_0x14a658(0x115)]
        ]);
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x2e && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== 'chatbox') {
        setTimeout(() => {
            var _0x285abf = _0x14a658;
            ch(_0x285abf(0x116));
            crashing = !![];
        }, 0x1f4);
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x49 && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== _0x14a658(0xb0)) {
        for (let _0x1f0874 = 0x0; _0x1f0874 < 0x4; _0x1f0874++) {
            let _0xd01534 = myPlayer['dir'] + toRad(_0x1f0874 * 0x5a);
            place(boostType, _0xd01534);
        }
    }
    if (_0xb67180['keyCode'] == 0xba && document[_0x14a658(0xae)]['id']['toLowerCase']() !== _0x14a658(0xb0)) {
        for (let _0x440e30 = 0x0; _0x440e30 < 0x4; _0x440e30++) {
            let _0x3b8a64 = myPlayer[_0x14a658(0xc6)] + toRad(_0x440e30 * 0x5a);
            place(spikeType, _0x3b8a64);
        }
    }
    if (_0xb67180['keyCode'] == 0x48 && document[_0x14a658(0xae)]['id']['toLowerCase']() !== _0x14a658(0xb0)) {
        place(turretType, myPlayer[_0x14a658(0xc6)] + toRad(0x2d));
        place(turretType, myPlayer[_0x14a658(0xc6)] - toRad(0x2d));
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x4d && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== _0x14a658(0xb0)) {
        if (myPlayer['y'] < 0x960) {
            hat(0xf);
        } else if (myPlayer['y'] > 0x1ac2 && myPlayer['y'] < 0x1d7e) {
            hat(0x1f);
        } else {
            hat(0xc);
        }
        acc(0xb);
    }
    if (_0xb67180['keyCode'] == 0x55 && document[_0x14a658(0xae)]['id']['toLowerCase']() !== _0x14a658(0xb0)) {
        last = myPlayer[_0x14a658(0xdf)];
        lastt = myPlayer[_0x14a658(0xe0)];
        autoaim = !![];
        doNewSend([
            '5',
            [
                primary,
                !![]
            ]
        ]);
        doNewSend([
            '13c',
            [
                0x0,
                0x7,
                0x0
            ]
        ]);
        doNewSend([
            _0x14a658(0xb2),
            [
                0x0,
                0x0,
                0x1
            ]
        ]);
        doNewSend([
            '7',
            [0x3]
        ]);
        setTimeout(() => {
            doNewSend([
                '6',
                [0x5]
            ]);
            doNewSend([
                '6',
                [0x11]
            ]);
            doNewSend([
                '6',
                [0x1f]
            ]);
            doNewSend([
                '6',
                [0x17]
            ]);
            doNewSend([
                '6',
                [0x9]
            ]);
            doNewSend([
                '6',
                [0x21]
            ]);
        }, 0x78);
        setTimeout(() => {
            doNewSend([
                '6',
                [0x4]
            ]);
        }, 0xe6);
        setTimeout(() => {
            var _0x4b3115 = _0x14a658;
            doNewSend([
                '5',
                [
                    secondary,
                    !![]
                ]
            ]);
            doNewSend([
                _0x4b3115(0xb2),
                [
                    0x0,
                    0x35,
                    0x0
                ]
            ]);
        }, 0x15e);
        setTimeout(() => {
            doNewSend([
                '6',
                [0xf]
            ]);
        }, 0x1d6);
        setTimeout(() => {
            var _0x1fb041 = _0x14a658;
            doNewSend([
                '7',
                [0x3]
            ]);
            doNewSend([
                '5',
                [
                    primary,
                    !![]
                ]
            ]);
            doNewSend([
                _0x1fb041(0xb2),
                [
                    0x0,
                    last,
                    0x0
                ]
            ]);
            doNewSend([
                '13c',
                [
                    0x0,
                    lastt,
                    0x1
                ]
            ]);
        }, 0x258);
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x52 && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== _0x14a658(0xb0)) {
        autoaim = !![];
        var _0x5e37c8 = {};
        _0x5e37c8['hat'] = myPlayer['hat'];
        _0x5e37c8[_0x14a658(0xe0)] = myPlayer[_0x14a658(0xfe)];
        doNewSend([
            'c',
            [0x1]
        ]);
        doNewSend([
            _0x14a658(0xb2),
            [
                0x0,
                0x0,
                0x1
            ]
        ]);
        doNewSend([
            '5',
            [
                primary,
                !![]
            ]
        ]);
        doNewSend([
            _0x14a658(0xb2),
            [
                0x0,
                0x7,
                0x0
            ]
        ]);
        setTimeout(() => {
            doNewSend([
                '5',
                [
                    primary,
                    !![]
                ]
            ]);
            doNewSend([
                'c',
                [
                    0x0,
                    null
                ]
            ]);
        }, 0xc8);
        let _0xeda6e6 = new Uint8Array(0x109);
        setTimeout(() => {
            var _0x5061b3 = _0x14a658;
            var _0x125fe8 = 0x7e;
            doNewSend([
                _0x5061b3(0xb2),
                [
                    0x0,
                    0x35,
                    0x0
                ]
            ]);
            doNewSend([
                _0x5061b3(0xb2),
                [
                    0x0,
                    _0x5e37c8[_0x5061b3(0xe0)],
                    0x1
                ]
            ]);
            doNewSend([
                '5',
                [
                    secondary,
                    !![]
                ]
            ]);
            for (let _0x357520 = 0x0; _0x357520 < 0xa5; _0x357520++) {
                for (let _0x10a7f7 = 0x0; _0x10a7f7 < _0xeda6e6[_0x5061b3(0x6f)]; _0x10a7f7++) {
                    _0xeda6e6[_0x10a7f7] = Math['floor'](Math['random']() * 0x1de);
                    _0x125fe8 += _0xeda6e6[_0x10a7f7];
                }
            }
            ws['send'](_0xeda6e6);
        }, instaspeedd);
        setTimeout(() => {
            var _0x1bd8f5 = _0x14a658;
            doNewSend([
                'c',
                [
                    0x0,
                    null
                ]
            ]);
            doNewSend([
                _0x1bd8f5(0xb2),
                [
                    0x0,
                    _0x5e37c8['hat'],
                    0x0
                ]
            ]);
            autoaim = ![];
        }, instaspeedd + 0x64);
    }
    if (_0xb67180['keyCode'] == 0xc0 && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== _0x14a658(0xb0)) {
        invis();
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x20 && document['activeElement']['id'][_0x14a658(0xaf)]() !== _0x14a658(0xb0)) {
        autoaim = !![];
        doNewSend([
            '5',
            [
                primary,
                !![]
            ]
        ]);
        doNewSend([
            _0x14a658(0xb2),
            [
                0x0,
                0x7,
                0x0
            ]
        ]);
        doNewSend([
            '13c',
            [
                0x0,
                0x0,
                0x1
            ]
        ]);
        doNewSend([
            _0x14a658(0xb2),
            [
                0x0,
                0x12,
                0x1
            ]
        ]);
        place(spikeType, Math[_0x14a658(0xc4)](mouseY - height / 0x2, mouseX - width / 0x2) + toRad(0x0));
        doNewSend([
            'c',
            [0x1]
        ]);
        setTimeout(() => {
            var _0x414b57 = _0x14a658;
            doNewSend([
                _0x414b57(0xb2),
                [
                    0x0,
                    0x35,
                    0x0
                ]
            ]);
            doNewSend([
                _0x414b57(0xb2),
                [
                    0x0,
                    0x15,
                    0x1
                ]
            ]);
        }, 0xb2);
        setTimeout(() => {
            var _0x29ff4a = _0x14a658;
            autoaim = ![];
            doNewSend([
                'c',
                [
                    0x0,
                    null
                ]
            ]);
            doNewSend([
                '5',
                [
                    primary,
                    !![]
                ]
            ]);
            doNewSend([
                '13c',
                [
                    0x0,
                    0xb,
                    0x0
                ]
            ]);
            doNewSend([
                _0x29ff4a(0xb2),
                [
                    0x0,
                    0x15,
                    0x1
                ]
            ]);
        }, 0x123);
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x54 && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== _0x14a658(0xb0)) {
        if (space == 0x1) {
            autoaim = !![];
            doNewSend([
                '5',
                [
                    primary,
                    !![]
                ]
            ]);
            doNewSend([
                '13c',
                [
                    0x0,
                    0x7,
                    0x0
                ]
            ]);
            storeBuy(0x7);
            doNewSend([
                _0x14a658(0xb2),
                [
                    0x0,
                    0x0,
                    0x1
                ]
            ]);
            doNewSend([
                _0x14a658(0xb2),
                [
                    0x0,
                    0x13,
                    0x1
                ]
            ]);
            doNewSend([
                'c',
                [0x1]
            ]);
            setTimeout(() => {
                var _0x52e249 = _0x14a658;
                place(spikeType, myPlayer[_0x52e249(0xc6)] + toRad(0x2d));
                place(spikeType, myPlayer[_0x52e249(0xc6)] + toRad(0x13b));
                storeBuy(0x35);
            }, 0xb4);
            setTimeout(() => {
                var _0x216400 = _0x14a658;
                doNewSend([
                    'c',
                    [
                        0x0,
                        null
                    ]
                ]);
                doNewSend([
                    '13c',
                    [
                        0x0,
                        0xb,
                        0x0
                    ]
                ]);
                storeBuy(0xb);
                autoaim = ![];
                doNewSend([
                    'ch',
                    [_0x216400(0x117)]
                ]);
                space = 0x2;
            }, 0xfa);
        }
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x54 && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== _0x14a658(0xb0)) {
        if (space == 0x2) {
            autoaim = !![];
            doNewSend([
                '5',
                [
                    primary,
                    !![]
                ]
            ]);
            doNewSend([
                _0x14a658(0xb2),
                [
                    0x0,
                    0x15,
                    0x0
                ]
            ]);
            storeBuy(0x15);
            setTimeout(() => {
                var _0x5c71e1 = _0x14a658;
                doNewSend([
                    _0x5c71e1(0xb2),
                    [
                        0x0,
                        0x0,
                        0x1
                    ]
                ]);
                doNewSend([
                    '13c',
                    [
                        0x0,
                        0x13,
                        0x1
                    ]
                ]);
                doNewSend([
                    'c',
                    [0x1]
                ]);
            }, 0x64);
            setTimeout(() => {
                var _0x4f4e40 = _0x14a658;
                place(spikeType, myPlayer[_0x4f4e40(0xc6)] + toRad(0x2d));
                place(spikeType, myPlayer['dir'] + toRad(0x13b));
                doNewSend([
                    'c',
                    [
                        0x0,
                        null
                    ]
                ]);
            }, 0xc8);
            setTimeout(() => {
                var _0x5719e0 = _0x14a658;
                doNewSend([
                    'c',
                    [
                        0x0,
                        null
                    ]
                ]);
                doNewSend([
                    _0x5719e0(0xb2),
                    [
                        0x0,
                        0x6,
                        0x0
                    ]
                ]);
                storeBuy(0x6);
                autoaim = ![];
                doNewSend([
                    'ch',
                    ['XT\x20Insta:\x202.0']
                ]);
                space = 0x3;
            }, 0xfa);
        }
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x54 && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== 'chatbox') {
        if (space == 0x3) {
            autoaim = !![];
            doNewSend([
                '5',
                [
                    primary,
                    !![]
                ]
            ]);
            doNewSend([
                _0x14a658(0xb2),
                [
                    0x0,
                    0x7,
                    0x0
                ]
            ]);
            doNewSend([
                _0x14a658(0xb2),
                [
                    0x0,
                    0x0,
                    0x1
                ]
            ]);
            doNewSend([
                _0x14a658(0xb2),
                [
                    0x0,
                    0x13,
                    0x1
                ]
            ]);
            doNewSend([
                'c',
                [0x1]
            ]);
            setTimeout(() => {
                var _0x2f1fe6 = _0x14a658;
                doNewSend([
                    _0x2f1fe6(0xb2),
                    [
                        0x0,
                        0x35,
                        0x0
                    ]
                ]);
                doNewSend([
                    '5',
                    [
                        secondary,
                        !![]
                    ]
                ]);
            }, instaSpeed - 0x6e);
            setTimeout(() => {
                var _0x1f90d3 = _0x14a658;
                doNewSend([
                    _0x1f90d3(0xb2),
                    [
                        0x0,
                        0x6,
                        0x0
                    ]
                ]);
                doNewSend([
                    'c',
                    [
                        0x0,
                        null
                    ]
                ]);
                autoaim = ![];
                doNewSend([
                    'ch',
                    [_0x1f90d3(0x118)]
                ]);
                space = 0x1;
                doNewSend([
                    '13c',
                    [
                        0x0,
                        0x35,
                        0x0
                    ]
                ]);
            }, instaSpeed);
            setTimeout(() => {
                var _0x28a085 = _0x14a658;
                doNewSend([
                    '5',
                    [
                        primary,
                        !![]
                    ]
                ]);
                ch(_0x28a085(0x119));
            }, instaSpeed + 0x6a4);
            setTimeout(() => {
                var _0x2addeb = _0x14a658;
                doNewSend([
                    _0x2addeb(0xb2),
                    [
                        0x0,
                        0x6,
                        0x0
                    ]
                ]);
            }, instaSpeed + 0x898);
        }
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x61 && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== _0x14a658(0xb0)) {
        if (AutoInsta == ![]) {
            AutoInsta = !![];
            doNewSend([
                'ch',
                [_0x14a658(0x11a)]
            ]);
        } else {
            AutoInsta = ![];
            doNewSend([
                'ch',
                [_0x14a658(0x11b)]
            ]);
        }
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x66 && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== _0x14a658(0xb0)) {
        if (AntiBull == 0x0) {
            AntiBull = 0x1;
            doNewSend([
                'ch',
                [_0x14a658(0x11c)]
            ]);
        } else {
            AntiBull = 0x0;
            doNewSend([
                'ch',
                [_0x14a658(0x11d)]
            ]);
        }
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x65 && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== 'chatbox') {
        if (AntiInsta == 0x0) {
            AntiInsta = 0x1;
            doNewSend([
                'ch',
                [_0x14a658(0x11e)]
            ]);
        } else {
            AntiInsta = 0x0;
            doNewSend([
                'ch',
                ['AntiInsta-Off']
            ]);
        }
    }
    if (_0xb67180['keyCode'] == 0x6a && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== _0x14a658(0xb0)) {
        if (hatToggle == 0x0) {
            hatToggle = 0x1;
            doNewSend([
                'ch',
                [_0x14a658(0x11f)]
            ]);
        } else {
            doNewSend([
                'ch',
                [_0x14a658(0x120)]
            ]);
            hatToggle = 0x0;
        }
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x6f && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== 'chatbox') {
        if (healToggle == 0x0) {
            healToggle = 0x1;
            doNewSend([
                'ch',
                [_0x14a658(0x121)]
            ]);
        } else {
            doNewSend([
                'ch',
                [_0x14a658(0x122)]
            ]);
            healToggle = 0x0;
        }
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x6d && document[_0x14a658(0xae)]['id'][_0x14a658(0xaf)]() !== _0x14a658(0xb0)) {
        if (ihealToggle == 0x0) {
            ihealToggle = 0x1;
            healToggle = 0x1;
            doNewSend([
                'ch',
                ['Assassin\x20Hat\x20Heal:ON']
            ]);
        } else {
            healToggle = 0x1;
            ihealToggle = 0x0;
            doNewSend([
                'ch',
                ['Assassin\x20Hat\x20Heal:Off']
            ]);
        }
    }
    if (_0xb67180[_0x14a658(0xad)] == 0xbd && document[_0x14a658(0xae)]['id']['toLowerCase']() !== _0x14a658(0xb0)) {
        for (let _0x460c1e = 0x0; _0x460c1e < 0x1f4; _0x460c1e++) {
            let _0x1889cc = new Uint8Array(Math['round'](Math[_0x14a658(0xc8)]() * 0x32));
            for (let _0x423ca5 = 0x0; _0x423ca5 < _0x1889cc[_0x14a658(0x6f)]; _0x423ca5++) {
                if (_0x423ca5 == 0x0) {
                    _0x1889cc[_0x423ca5] = Math['round'](Math['random']() * 0x1f4);
                } else {
                    if (_0x423ca5 == 0x1) {
                        _0x1889cc[_0x423ca5] = Math[_0x14a658(0xc7)](Math[_0x14a658(0xc8)]() * 0x100);
                    } else {
                        if (_0x423ca5 == 0x2) {
                            _0x1889cc[_0x423ca5] = Math[_0x14a658(0xc7)](Math[_0x14a658(0xc8)]() * 0x80);
                        } else {
                            if (_0x423ca5 == 0x3) {
                                _0x1889cc[_0x423ca5] = Math[_0x14a658(0xc7)](Math[_0x14a658(0xc8)]() * 0x55);
                            } else {
                                if (_0x423ca5 == 0x4) {
                                    _0x1889cc[_0x423ca5] = Math[_0x14a658(0xc7)](Math[_0x14a658(0xc8)]() * 0x40);
                                } else {
                                    if (_0x423ca5 == 0x5) {
                                        _0x1889cc[_0x423ca5] = Math['round'](Math[_0x14a658(0xc8)]() * 0x33);
                                    } else {
                                        if (_0x423ca5 == 0x6) {
                                            _0x1889cc[_0x423ca5] = Math[_0x14a658(0xc7)](Math['random']() * 0x2a);
                                        } else {
                                            if (_0x423ca5 == 0x7) {
                                                _0x1889cc[_0x423ca5] = Math['round'](Math['random']() * 0x24);
                                            } else {
                                                if (_0x423ca5 == 0x8) {
                                                    _0x1889cc[_0x423ca5] = Math[_0x14a658(0xc7)](Math['random']() * 0x20);
                                                } else {
                                                    if (_0x423ca5 == 0x9) {
                                                        _0x1889cc[_0x423ca5] = Math[_0x14a658(0xc7)](Math['random']() * 0x1c);
                                                    } else {
                                                        if (_0x423ca5 == 0xa) {
                                                            _0x1889cc[_0x423ca5] = Math[_0x14a658(0xc7)](Math[_0x14a658(0xc8)]() * 0x19);
                                                        } else {
                                                            if (_0x423ca5 == 0xb) {
                                                                _0x1889cc[_0x423ca5] = Math[_0x14a658(0xc7)](Math['random']() * 0x17);
                                                            } else {
                                                                if (_0x423ca5 == 0xc) {
                                                                    _0x1889cc[_0x423ca5] = Math[_0x14a658(0xc7)](Math[_0x14a658(0xc8)]() * 0x15);
                                                                } else {
                                                                    if (_0x423ca5 == 0xd) {
                                                                        _0x1889cc[_0x423ca5] = Math[_0x14a658(0xc7)](Math[_0x14a658(0xc8)]() * 0x13);
                                                                    } else {
                                                                        if (_0x423ca5 == 0xe) {
                                                                            _0x1889cc[_0x423ca5] = Math['round'](Math[_0x14a658(0xc8)]() * 0x12);
                                                                        } else {
                                                                            if (_0x423ca5 == 0xf) {
                                                                                _0x1889cc[_0x423ca5] = Math[_0x14a658(0xc7)](Math['random']() * 0x11);
                                                                            } else {
                                                                                if (_0x423ca5 == 0x10) {
                                                                                    _0x1889cc[_0x423ca5] = Math[_0x14a658(0xc7)](Math[_0x14a658(0xc8)]() * 0x10);
                                                                                } else {
                                                                                    if (_0x423ca5 == 0x11) {
                                                                                        _0x1889cc[_0x423ca5] = Math['round'](Math[_0x14a658(0xc8)]() * 0xf);
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            ws[_0x14a658(0xc9)](_0x1889cc);
        }
        ch(_0x14a658(0x123));
    }
    if (_0xb67180[_0x14a658(0xad)] == 0x4c && document['activeElement']['id'][_0x14a658(0xaf)]() !== _0x14a658(0xb0)) {
        autoaim = !![];
        doNewSend([
            'c',
            [0x1]
        ]);
        doNewSend([
            '5',
            [
                secondary,
                !![]
            ]
        ]);
        setTimeout(() => {
            doNewSend([
                '6',
                [0xc]
            ]);
        }, 0x64);
        setTimeout(() => {
            var _0x311528 = _0x14a658;
            doNewSend([
                '6',
                [0xf]
            ]);
            doNewSend([
                _0x311528(0xb2),
                [
                    0x0,
                    0x35,
                    0x0
                ]
            ]);
        }, 0x12c);
        setTimeout(() => {
            doNewSend([
                'c',
                [0x0]
            ]);
            doNewSend([
                '13c',
                [
                    0x0,
                    0x6,
                    0x0
                ]
            ]);
            doNewSend([
                '5',
                [
                    primary,
                    !![]
                ]
            ]);
            autoaim = ![];
        }, 0x190);
    }
    if (AutoInsta == !![]) {
        if (Math[_0x14a658(0x106)](Math['pow'](myPlayer['y'] - nearestEnemy[0x2], 0x2) + Math[_0x14a658(0x104)](myPlayer['x'] - nearestEnemy[0x1], 0x2)) < 0xe6) {
            autoaim = !![];
            doNewSend([
                '5',
                [
                    primary,
                    !![]
                ]
            ]);
            doNewSend([
                _0x14a658(0xb2),
                [
                    0x0,
                    0x7,
                    0x0
                ]
            ]);
            doNewSend([
                _0x14a658(0xb2),
                [
                    0x0,
                    0x0,
                    0x1
                ]
            ]);
            doNewSend([
                'c',
                [0x1]
            ]);
            doNewSend([
                _0x14a658(0xb2),
                [
                    0x0,
                    0x15,
                    0x1
                ]
            ]);
            setTimeout(() => {
                doNewSend([
                    '13c',
                    [
                        0x0,
                        0x35,
                        0x0
                    ]
                ]);
                doNewSend([
                    '5',
                    [
                        secondary,
                        !![]
                    ]
                ]);
                AutoInsta = !![];
            }, instaSpeed - 0x6e);
            setTimeout(() => {
                var _0x2cc704 = _0x14a658;
                doNewSend([
                    '5',
                    [
                        primary,
                        !![]
                    ]
                ]);
                doNewSend([
                    _0x2cc704(0xb2),
                    [
                        0x0,
                        0x6,
                        0x0
                    ]
                ]);
                autoaim = ![];
                doNewSend([
                    'ch',
                    [_0x2cc704(0x124)]
                ]);
            }, instaSpeed);
            setTimeout(() => {
                var _0x112472 = _0x14a658;
                doNewSend([
                    '5',
                    [
                        secondary,
                        !![]
                    ]
                ]);
                doNewSend([
                    'ch',
                    [_0x112472(0x125)]
                ]);
            }, instaSpeed + 0x64);
            setTimeout(() => {
                var _0x31657a = _0x14a658;
                doNewSend([
                    '5',
                    [
                        secondary,
                        !![]
                    ]
                ]);
                doNewSend([
                    'ch',
                    [_0x31657a(0x126)]
                ]);
                doNewSend([
                    'c',
                    [
                        0x0,
                        null
                    ]
                ]);
            }, instaSpeed + 0x258);
            setTimeout(() => {
                var _0x32ee84 = _0x14a658;
                doNewSend([
                    '5',
                    [
                        secondary,
                        !![]
                    ]
                ]);
                doNewSend([
                    'ch',
                    [_0x32ee84(0x127)]
                ]);
            }, instaSpeed + 0x44c);
            setTimeout(() => {
                var _0xb0838e = _0x14a658;
                doNewSend([
                    '5',
                    [
                        primary,
                        !![]
                    ]
                ]);
                doNewSend([
                    'ch',
                    [_0xb0838e(0x128)]
                ]);
            }, instaSpeed + 0x6a4);
        }
    }
});
document[_0x55a115(0x7b)](_0x55a115(0x129), _0x58460b => {
    var _0x27e02d = _0x55a115;
    dashing[_0x27e02d(0x12a)](_0x58460b[_0x27e02d(0xad)]);
    spikePlacer[_0x27e02d(0x12a)](_0x58460b[_0x27e02d(0xad)]);
    boostPlacer[_0x27e02d(0x12a)](_0x58460b[_0x27e02d(0xad)]);
    boostSpiker['stop'](_0x58460b['keyCode']);
    millPlacer[_0x27e02d(0x12a)](_0x58460b[_0x27e02d(0xad)]);
    turretPlacer[_0x27e02d(0x12a)](_0x58460b[_0x27e02d(0xad)]);
    healer[_0x27e02d(0x12a)](_0x58460b['keyCode']);
    fourSpawnpader[_0x27e02d(0x12a)](_0x58460b['keyCode']);
    if (_0x58460b['keyCode'] == 0x47 && document[_0x27e02d(0xae)]['id'][_0x27e02d(0xaf)]() !== _0x27e02d(0xb0)) {
        setTimeout(() => {
            doNewSend([
                '33',
                [null]
            ]);
            boostDir = null;
        }, 0xa);
    }
});
function isElementVisible(_0x36fc11) {
    var _0x3ecb50 = _0x55a115;
    return _0x36fc11[_0x3ecb50(0x12b)] !== null;
}
function toRad(_0x547b92) {
    return _0x547b92 * 0.01745329251;
}
function dist(_0x34f724, _0x41ee2d) {
    var _0x5d3ad3 = _0x55a115;
    return Math[_0x5d3ad3(0x106)](Math['pow'](_0x41ee2d['y'] - _0x34f724[0x2], 0x2) + Math[_0x5d3ad3(0x104)](_0x41ee2d['x'] - _0x34f724[0x1], 0x2));
}
document[_0x55a115(0x8e)](_0x55a115(0x12c))[_0x55a115(0x12d)] = _0x55a115(0x12e);
document[_0x55a115(0x8e)](_0x55a115(0x12f))['innerHTML'] = 'NeverGiveUp';
document['getElementById'](_0x55a115(0x12f))[_0x55a115(0x130)]();
document[_0x55a115(0x8e)](_0x55a115(0x131))['style'] = _0x55a115(0x132);
document[_0x55a115(0x8e)](_0x55a115(0x133))[_0x55a115(0x77)] = 'box-shadow:\x20#3DFFBF\x201px\x201px\x2040px;';
document[_0x55a115(0x8e)](_0x55a115(0x12c))['style'] = 'text-shadow:\x20#3DFFBF\x201px\x201px\x2040px;';
document[_0x55a115(0x8e)]('enterGame')[_0x55a115(0x77)] = _0x55a115(0x134);
document[_0x55a115(0x8e)](_0x55a115(0x135))[_0x55a115(0x12d)] = _0x55a115(0x136);
document[_0x55a115(0x85)]('#leaderboard')[_0x55a115(0x99)](function () {
    var _0x117643 = _0x55a115;
    let _0x328edb = 'ping:\x20';
    let _0x13a243 = 0x0;
    const _0x46f0bd = document[_0x117643(0x80)]('span');
    _0x46f0bd['id'] = _0x117643(0x137);
    _0x46f0bd[_0x117643(0x138)] = _0x328edb;
    _0x46f0bd[_0x117643(0x77)][_0x117643(0x7d)] = 'inline-block';
    setInterval(function () {
        var _0x535321 = _0x117643;
        typeof pingTime !== _0x535321(0x139) && _0x13a243 !== pingTime && (_0x13a243 = pingTime, _0x46f0bd[_0x535321(0x138)] = _0x328edb + _0x13a243, function () {
            var _0x3d03a6 = _0x535321;
            if (_0x13a243 <= 0x46) {
                _0x46f0bd['style'][_0x3d03a6(0x13a)] = _0x3d03a6(0x13b);
            }
            if (_0x13a243 >= 0x46 && _0x13a243 <= 0x65) {
                _0x46f0bd['style'][_0x3d03a6(0x13a)] = _0x3d03a6(0x13c);
            }
            if (_0x13a243 >= 0x65 && _0x13a243 <= 0xfa) {
                _0x46f0bd[_0x3d03a6(0x77)][_0x3d03a6(0x13a)] = _0x3d03a6(0x13d);
            }
            if (_0x13a243 >= 0xfb) {
                _0x46f0bd[_0x3d03a6(0x77)]['color'] = 'red';
            }
        }());
    });
    return _0x46f0bd;
}());
document[_0x55a115(0x13e)] = 'xXClaudeXx\x20Mod';
function update() {
    var _0x338c93 = _0x55a115;
    if (isElementVisible(document['getElementById'](_0x338c93(0x13f)))) {
        lmao = 0x10;
    }
    if (isElementVisible(document['getElementById']('actionBarItem17'))) {
        lmao = 0x11;
    }
    if (isElementVisible(document[_0x338c93(0x8e)](_0x338c93(0x140)))) {
        lmao = 0x11;
    }
    for (let _0x3d0bf4 = 0x0; _0x3d0bf4 < 0x9; _0x3d0bf4++) {
        if (isElementVisible(document[_0x338c93(0x8e)](_0x338c93(0x141) + _0x3d0bf4[_0x338c93(0x74)]()))) {
            primary = _0x3d0bf4;
        }
    }
    for (let _0x43daca = 0x9; _0x43daca < 0x10; _0x43daca++) {
        if (isElementVisible(document[_0x338c93(0x8e)](_0x338c93(0x141) + _0x43daca[_0x338c93(0x74)]()))) {
            secondary = _0x43daca;
        }
    }
    for (let _0x1177e1 = 0x10; _0x1177e1 < 0x13; _0x1177e1++) {
        if (isElementVisible(document['getElementById'](_0x338c93(0x141) + _0x1177e1[_0x338c93(0x74)]()))) {
            foodType = _0x1177e1 - 0x10;
        }
    }
    for (let _0x178bee = 0x13; _0x178bee < 0x16; _0x178bee++) {
        if (isElementVisible(document[_0x338c93(0x8e)](_0x338c93(0x141) + _0x178bee['toString']()))) {
            wallType = _0x178bee - 0x10;
        }
    }
    for (let _0x119720 = 0x16; _0x119720 < 0x1a; _0x119720++) {
        if (isElementVisible(document[_0x338c93(0x8e)](_0x338c93(0x141) + _0x119720[_0x338c93(0x74)]()))) {
            spikeType = _0x119720 - 0x10;
        }
    }
    for (let _0x10ab17 = 0x1a; _0x10ab17 < 0x1d; _0x10ab17++) {
        if (isElementVisible(document[_0x338c93(0x8e)]('actionBarItem' + _0x10ab17[_0x338c93(0x74)]()))) {
            millType = _0x10ab17 - 0x10;
        }
    }
    for (let _0x1be0be = 0x1d; _0x1be0be < 0x1f; _0x1be0be++) {
        if (isElementVisible(document[_0x338c93(0x8e)](_0x338c93(0x141) + _0x1be0be['toString']()))) {
            mineType = _0x1be0be - 0x10;
        }
    }
    for (let _0x590462 = 0x1f; _0x590462 < 0x21; _0x590462++) {
        if (isElementVisible(document[_0x338c93(0x8e)]('actionBarItem' + _0x590462[_0x338c93(0x74)]()))) {
            boostType = _0x590462 - 0x10;
        }
    }
    for (let _0x115ce9 = 0x21; _0x115ce9 < 0x24; _0x115ce9++) {
        if (isElementVisible(document[_0x338c93(0x8e)](_0x338c93(0x141) + _0x115ce9[_0x338c93(0x74)]()))) {
            turretType = _0x115ce9 - 0x10;
        }
    }
    for (let _0x2ca1d8 = 0x24; _0x2ca1d8 < 0x25; _0x2ca1d8++) {
        if (isElementVisible(document[_0x338c93(0x8e)](_0x338c93(0x141) + _0x2ca1d8['toString']()))) {
            spawnpadType = _0x2ca1d8 - 0x10;
        }
    }
    for (let _0x4f2cce = 0x25; _0x4f2cce < 0x27; _0x4f2cce++) {
        if (isElementVisible(document[_0x338c93(0x8e)](_0x338c93(0x141) + _0x4f2cce[_0x338c93(0x74)]()))) {
            turretType = _0x4f2cce - 0x10;
        }
    }
}
var weapons = [
    {
        'id': 0x0,
        'type': 0x0,
        'name': _0x55a115(0x142),
        'desc': 'tool\x20for\x20gathering\x20all\x20resources',
        'src': _0x55a115(0x143),
        'length': 0x8c,
        'width': 0x8c,
        'xOff': -0x3,
        'yOff': 0x12,
        'dmg': 0x19,
        'range': 0x41,
        'gather': 0x1,
        'speed': 0x12c
    },
    {
        'id': 0x1,
        'type': 0x0,
        'age': 0x2,
        'name': _0x55a115(0x144),
        'desc': _0x55a115(0x145),
        'src': _0x55a115(0x146),
        'length': 0x8c,
        'width': 0x8c,
        'xOff': 0x3,
        'yOff': 0x18,
        'dmg': 0x1e,
        'spdMult': 0x1,
        'range': 0x46,
        'gather': 0x2,
        'speed': 0x190
    },
    {
        'id': 0x2,
        'type': 0x0,
        'age': 0x8,
        'name': _0x55a115(0x147),
        'desc': _0x55a115(0x148),
        'src': 'great_axe_1',
        'length': 0x8c,
        'width': 0x8c,
        'xOff': -0x8,
        'yOff': 0x19,
        'dmg': 0x23,
        'spdMult': 0x1,
        'range': 0x4b,
        'gather': 0x4,
        'speed': 0x190
    },
    {
        'id': 0x3,
        'type': 0x0,
        'age': 0x2,
        'name': 'short\x20sword',
        'desc': _0x55a115(0x149),
        'src': _0x55a115(0x14a),
        'iPad': 1.3,
        'length': 0x82,
        'width': 0xd2,
        'xOff': -0x8,
        'yOff': 0x2e,
        'dmg': 0x23,
        'spdMult': 0.85,
        'range': 0x6e,
        'gather': 0x1,
        'speed': 0x12c
    },
    {
        'id': 0x4,
        'type': 0x0,
        'age': 0x8,
        'name': _0x55a115(0xf0),
        'desc': 'greater\x20range\x20and\x20damage',
        'src': _0x55a115(0x14b),
        'iPad': 1.3,
        'length': 0x82,
        'width': 0xd2,
        'xOff': -0x8,
        'yOff': 0x3b,
        'dmg': 0x28,
        'spdMult': 0.8,
        'range': 0x76,
        'gather': 0x1,
        'speed': 0x12c
    },
    {
        'id': 0x5,
        'type': 0x0,
        'age': 0x2,
        'name': 'polearm',
        'desc': _0x55a115(0x14c),
        'src': _0x55a115(0x14d),
        'iPad': 1.3,
        'length': 0x82,
        'width': 0xd2,
        'xOff': -0x8,
        'yOff': 0x35,
        'dmg': 0x2d,
        'knock': 0.2,
        'spdMult': 0.82,
        'range': 0x8e,
        'gather': 0x1,
        'speed': 0x2bc
    },
    {
        'id': 0x6,
        'type': 0x0,
        'age': 0x2,
        'name': _0x55a115(0x14e),
        'desc': 'fast\x20long\x20range\x20melee\x20weapon',
        'src': 'bat_1',
        'iPad': 1.3,
        'length': 0x6e,
        'width': 0xb4,
        'xOff': -0x8,
        'yOff': 0x35,
        'dmg': 0x14,
        'knock': 0.7,
        'range': 0x6e,
        'gather': 0x1,
        'speed': 0x12c
    },
    {
        'id': 0x7,
        'type': 0x0,
        'age': 0x2,
        'name': _0x55a115(0x14f),
        'desc': 'really\x20fast\x20short\x20range\x20weapon',
        'src': _0x55a115(0x150),
        'iPad': 0.8,
        'length': 0x6e,
        'width': 0x6e,
        'xOff': 0x12,
        'yOff': 0x0,
        'dmg': 0x14,
        'knock': 0.1,
        'range': 0x41,
        'gather': 0x1,
        'hitSlow': 0.1,
        'spdMult': 1.13,
        'speed': 0x64
    },
    {
        'id': 0x8,
        'type': 0x0,
        'age': 0x2,
        'name': 'stick',
        'desc': _0x55a115(0x151),
        'src': _0x55a115(0x152),
        'length': 0x8c,
        'width': 0x8c,
        'xOff': 0x3,
        'yOff': 0x18,
        'dmg': 0x1,
        'spdMult': 0x1,
        'range': 0x46,
        'gather': 0x7,
        'speed': 0x190
    },
    {
        'id': 0x9,
        'type': 0x1,
        'age': 0x6,
        'name': _0x55a115(0x153),
        'desc': _0x55a115(0x154),
        'src': _0x55a115(0x155),
        'req': [
            _0x55a115(0x156),
            0x4
        ],
        'length': 0x78,
        'width': 0x78,
        'xOff': -0x6,
        'yOff': 0x0,
        'projectile': 0x0,
        'spdMult': 0.75,
        'speed': 0x258
    },
    {
        'id': 0xa,
        'type': 0x1,
        'age': 0x6,
        'name': _0x55a115(0x157),
        'desc': _0x55a115(0x158),
        'src': _0x55a115(0x159),
        'length': 0x8c,
        'width': 0x8c,
        'xOff': -0x9,
        'yOff': 0x19,
        'dmg': 0xa,
        'spdMult': 0.88,
        'range': 0x4b,
        'sDmg': 7.5,
        'gather': 0x1,
        'speed': 0x190
    },
    {
        'id': 0xb,
        'type': 0x1,
        'age': 0x6,
        'name': _0x55a115(0x15a),
        'desc': _0x55a115(0x15b),
        'src': _0x55a115(0x15c),
        'length': 0x78,
        'width': 0x78,
        'shield': 0.2,
        'xOff': 0x6,
        'yOff': 0x0,
        'spdMult': 0.7
    },
    {
        'id': 0xc,
        'type': 0x1,
        'age': 0x8,
        'name': _0x55a115(0x15d),
        'desc': _0x55a115(0x15e),
        'src': _0x55a115(0x15f),
        'req': [
            _0x55a115(0x156),
            0x5
        ],
        'aboveHand': !0x0,
        'armS': 0.75,
        'length': 0x78,
        'width': 0x78,
        'xOff': -0x4,
        'yOff': 0x0,
        'projectile': 0x2,
        'spdMult': 0.7,
        'speed': 0x2bc
    },
    {
        'id': 0xd,
        'type': 0x1,
        'age': 0x9,
        'name': _0x55a115(0x160),
        'desc': _0x55a115(0x161),
        'src': _0x55a115(0x162),
        'req': [
            _0x55a115(0x156),
            0xa
        ],
        'aboveHand': !0x0,
        'armS': 0.75,
        'length': 0x78,
        'width': 0x78,
        'xOff': -0x4,
        'yOff': 0x0,
        'projectile': 0x3,
        'spdMult': 0.7,
        'speed': 0xe6
    },
    {
        'id': 0xe,
        'type': 0x1,
        'age': 0x6,
        'name': _0x55a115(0x163),
        'desc': _0x55a115(0x164),
        'src': _0x55a115(0x165),
        'length': 0x82,
        'width': 0xd2,
        'xOff': -0x8,
        'yOff': 0x35,
        'dmg': 0x0,
        'steal': 0xfa,
        'knock': 0.2,
        'spdMult': 1.05,
        'range': 0x7d,
        'gather': 0x0,
        'speed': 0x2bc
    },
    {
        'id': 0xf,
        'type': 0x1,
        'age': 0x9,
        'name': _0x55a115(0x166),
        'desc': _0x55a115(0x167),
        'src': _0x55a115(0x168),
        'req': [
            _0x55a115(0x169),
            0xa
        ],
        'aboveHand': !0x0,
        'rec': 0.35,
        'armS': 0.6,
        'hndS': 0.3,
        'hndD': 1.6,
        'length': 0x12c,
        'width': 0xcd,
        'xOff': 0x19,
        'yOff': 0x0,
        'projectile': 0x5,
        'hideProjectile': !0x0,
        'spdMult': 0.6,
        'speed': 0x5dc
    }
];
